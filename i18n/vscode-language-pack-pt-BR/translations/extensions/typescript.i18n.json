{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"typescript.reloadProjects.title": "Recarregar Projeto",
			"javascript.reloadProjects.title": "Recarregar Projeto",
			"configuration.typescript": "TypeScript",
			"typescript.useCodeSnippetsOnMethodSuggest.dec": "Funções completas com a assinatura do parâmetro.",
			"typescript.tsdk.desc": "Especifica o caminho da pasta que contém os arquivos tsserver e lib*.d.ts para usar.",
			"typescript.disableAutomaticTypeAcquisition": "Desabilita a aquisição automática de tipo. Requer TypeScript > = 2.0.6.",
			"typescript.tsserver.log": "Habilita o log do servidor TS para um arquivo. Este log pode ser usado para diagnosticar problemas do servidor de TS. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.tsserver.trace": "Habilita o rastreamento de mensagens enviadas para o servidor de TS. Este rastreamento pode ser usado para diagnosticar problemas do servidor de TS. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.",
			"typescript.validate.enable": "Habilita/Desabilita a validação TypeScript.",
			"typescript.format.enable": "Habilita/Desabilita o formatador padrão TypeScript.",
			"javascript.format.enable": "Habilita/Desabilita o formatador padrão JavaScript.",
			"format.insertSpaceAfterCommaDelimiter": "Define o tratamento de espaços após um delimitador vírgula.",
			"format.insertSpaceAfterConstructor": "Define a manipulação de espaços após a palavra-chave do construtor. Requer TypeScript > = 2.3.0.",
			"format.insertSpaceAfterSemicolonInForStatements": "Define o tratamento de espaços após um ponto e vírgula para um comando.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Define o tratamento de espaços após um operador binário.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Define o tratamento de espaços após palavras-chave em um comando de controle de fluxo.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Define o tratamento de espaços após uma palavra-chave de função para funções anônimas.",
			"format.insertSpaceBeforeFunctionParenthesis": "Define a manipulação de espaços antes de parênteses do argumento de função. Requer TypeScript > = 2.1.5.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Define a manipulação de espaços após abrir e antes de fechar parênteses não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Define a manipulação de espaços após abrir e antes de fechar colchetes não vazios.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Define a manipulação de espaços após abrir e antes de fechar chaves não vazias. Requer TypeScript >= 2.3.0.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Define a manipulação de espaços após abrir e antes de fechar chaves de cadeias de caracteres de modelos. Requer TypeScript >= 2.0.6.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Define a manipulação de espaços após abrir e antes de fechar chaves de expressões JSX. Requer TypeScript >= 2.0.6.",
			"format.insertSpaceAfterTypeAssertion": "Define a manipulação de espaços após asserções de tipo em TypeScript. Requer TypeScript >= 2,4.",
			"format.placeOpenBraceOnNewLineForFunctions": "Define-se uma chave de abertura é colocada em uma nova linha para funções ou não.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Define-se uma chave de abertura é colocada em uma nova linha para blocos de controle ou não.",
			"javascript.validate.enable": "Habilitar/Desabilitar validação JavaScript.",
			"typescript.goToProjectConfig.title": "Ir para a Configuração do Projeto",
			"javascript.goToProjectConfig.title": "Ir para a Configuração do Projeto",
			"javascript.referencesCodeLens.enabled": "Habilitar/desabilitar referências CodeLens em arquivos JavaScript.",
			"typescript.referencesCodeLens.enabled": "Habilitar/desabilitar referências CodeLens em arquivos TypeScript. Requer TypeScript > = 2.0.6.",
			"typescript.implementationsCodeLens.enabled": "Habilitar/desabilitar implementações CodeLens. Requer TypeScript > = 2.0.6.",
			"typescript.openTsServerLog.title": "Abrir arquivo de log do servidor TS",
			"typescript.restartTsServer": "Reiniciar o servidor TS",
			"typescript.selectTypeScriptVersion.title": "Selecionar a versão do JavaScript",
			"typescript.reportStyleChecksAsWarnings": "Relatório de verificações de estilo como avisos",
			"jsDocCompletion.enabled": "Habilitar/Desabilitar comentários JSDoc automáticos.",
			"javascript.implicitProjectConfig.checkJs": "Habilitar/desabilitar verificação semântica de arquivos JavaScript. Os arquivos existentes  jsconfig.json ou tsconfig.json substituem essa configuração. Requer TypeScript > = 2.3.1.",
			"typescript.npm": "Especifica o caminho para o executável do NPM usado para Aquisição de Tipo Automático. Requer TypeScript > = 2.3.4.",
			"typescript.check.npmIsInstalled": "Verificar se o NPM está instalado para aquisição automática de tipo.",
			"javascript.nameSuggestions": "Habilitar/desabilitar incluindo nomes exclusivos do arquivo nas listas de sugestão de JavaScript.",
			"typescript.tsc.autoDetect": "Controla a auto deteção das tarefas de tsc. 'off' desativa esse recurso. 'build' só cria tarefas de compilação de execução única. 'watch' cria apenas tarefas de compilação e monitoramento. 'on' cria ambas as tarefas de compilar e monitoramento. Padrão é 'on'.",
			"typescript.problemMatchers.tsc.label": "Problemas TypeScript",
			"typescript.problemMatchers.tscWatch.label": "Problemas TypeScript (modo observação)",
			"typescript.quickSuggestionsForPaths": "Ativar/desativar sugestões rápidas quando estiver digitando um caminho de importação.",
			"typescript.locale": "Define a localidade usada para relatar erros TypeScript. Requer TypeScript > = 2.6.0. Padrão 'null' usa a localidade do VS Code para erros TypeScript.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Ativar/desativar 'experimentalDecorators' para arquivos JavaScript que não fazem parte de um projeto. Os arquivos existentes de jsconfig.json ou tsconfig.json substituem essa configuração. Requer TypeScript >= 2.3.1.",
			"typescript.autoImportSuggestions.enabled": "Ativar/desativar sugestões de importação automática. Requer TypeScript >= 2.6.1"
		},
		"out/utils/versionProvider": {
			"couldNotLoadTsVersion": "Não foi possível carregar a versão do TypeScript neste caminho",
			"noBundledServerFound": "Tsserver do VS Code foi eliminado por outro aplicativo como uma ferramenta de detecção de vírus com um comportamento inadequado. Por favor reinstale o VS Code."
		},
		"out/utils/versionPicker": {
			"useVSCodeVersionOption": "Use a versão do VS Code",
			"useWorkspaceVersionOption": "Use a versão de área de trabalho",
			"learnMore": "Saiba Mais",
			"selectTsVersion": "Selecione a versão do TypeScript usada para os recursos de linguagem JavaScript e TypeScript"
		},
		"out/utils/typingsStatus": {
			"installingPackages": "Buscando dados para melhor IntelliSense do TypeScript",
			"typesInstallerInitializationFailed.title": "Não foi possível instalar arquivos de tipagens para recursos da linguagem JavaScript. Por favor, certifique-se de que a NPM está instalado ou configure 'typescript.npm' em suas configurações de usuário",
			"typesInstallerInitializationFailed.moreInformation": "Mais informações",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Não verificar novamente",
			"typesInstallerInitializationFailed.close": "Fechar"
		},
		"out/utils/projectStatus": {
			"hintExclude": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas com muitos arquivos, como: {0}",
			"hintExclude.generic": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas grandes com arquivos em que você não trabalha.",
			"large.label": "Configurar exclusões",
			"hintExclude.tooltip": "Para habilitar os recursos de linguagem JavaScript/TypeScipt em todo o projeto, excluir pastas grandes com arquivos em que você não trabalha."
		},
		"out/utils/logger": {
			"channelName": "TypeScript"
		},
		"out/utils/api": {
			"invalidVersion": "versão inválida"
		},
		"out/features/taskProvider": {
			"buildTscLabel": "compilar - {0}",
			"buildAndWatchTscLabel": "monitorar - {0}"
		},
		"out/features/referencesCodeLensProvider": {
			"oneReferenceLabel": "1 referência",
			"manyReferenceLabel": "{0} referências",
			"referenceErrorLabel": "Não foi possível determinar as referências"
		},
		"out/features/quickFixProvider": {
			"fixAllInFileLabel": "{0} (Reparar tudo no arquivo)"
		},
		"out/features/jsDocCompletionProvider": {
			"typescript.jsDocCompletionItem.documentation": "Comentário JSDoc"
		},
		"out/features/implementationsCodeLensProvider": {
			"oneImplementationLabel": "1 implementação",
			"manyImplementationLabel": "{0} implementações",
			"implementationsErrorLabel": "Não foi possível determinar implementações"
		},
		"out/features/directiveCommentCompletionProvider": {
			"ts-check": "Habilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-nocheck": "Desabilita verificação semântica em um arquivo JavaScript. Deve estar no topo de um arquivo.",
			"ts-ignore": "Suprime erros de @ts-check na próxima linha de um arquivo."
		},
		"out/features/completionItemProvider": {
			"selectCodeAction": "Selecione uma ação de código para aplicar",
			"acquiringTypingsLabel": "Adquirindo digitações...",
			"acquiringTypingsDetail": "Adquirindo definições de digitações para o Intellisense.",
			"autoImportLabel": "Importação automática de {0}"
		},
		"out/typescriptServiceClient": {
			"noServerFound": "O caminho {0} não aponta para uma instalação de tsserver válida. Voltando para a versão do TypeScript empacotada.",
			"serverCouldNotBeStarted": "Servidor de linguagem TypeScript não pôde ser iniciado. Mensagem de erro é: {0}",
			"typescript.openTsServerLog.notSupported": "Logging de TS Server requer TS TS 2.2.2+",
			"typescript.openTsServerLog.loggingNotEnabled": "Logging de TS Server está desligado. Por favor configure 'typescript.tsserver.log' e reinicie o  TS Server para habilitar o log",
			"typescript.openTsServerLog.enableAndReloadOption": "Habilitar logging e reniciar TS server",
			"typescript.openTsServerLog.noLogFile": "O TS Server não iniciou o logging.",
			"openTsServerLog.openFileFailedFailed": "Não foi possível abrir o arquivo de log do TS Server",
			"serverDiedAfterStart": "O serviço de linguagem TypeScript morreu 5 vezes depois que começou. O serviço não será reiniciado.",
			"serverDiedReportIssue": "Reportar Problema",
			"serverDied": "O serviço TypeScript morreu inesperadamente 5 vezes nos últimos 5 minutos."
		},
		"out/commands": {
			"typescript.projectConfigNoWorkspace": "Favor abrir uma pasta no VS Code para usar um projeto TypeScript ou JavaScript",
			"typescript.projectConfigUnsupportedFile": "Não foi possível determinar o projeto TypeScript ou JavaScript. Tipo de arquivo não suportado",
			"typescript.projectConfigCouldNotGetInfo": "Não foi possível determinar o projeto TypeScript ou JavaScript",
			"typescript.noTypeScriptProjectConfig": "Arquivo não é parte de um projeto TypeScript",
			"typescript.noJavaScriptProjectConfig": "Arquivo não é parte de um projeto JavaScript",
			"typescript.configureTsconfigQuickPick": "Configurar tsconfig.json",
			"typescript.configureJsconfigQuickPick": "Configurar jsconfig.json",
			"typescript.projectConfigLearnMore": "Saiba Mais"
		}
	}
}