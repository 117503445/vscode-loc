{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Add Browser Breakpoint",
			"attach.node.process": "Attach to Node Process (preview)",
			"chrome.address.description": "디버깅 포트에 대한 TCP/IP 주소",
			"chrome.attach.description": "Attach to an instance of Chrome already in debug mode",
			"chrome.attach.label": "Chrome: Attach",
			"chrome.baseUrl.description": "Base URL to resolve paths baseUrl. baseURL is trimmed when mapping URLs to the files on disk. Defaults to the launch URL domain.",
			"chrome.cwd.description": "런타임 실행 파일에 대한 선택적 작업 디렉터리입니다.",
			"chrome.disableNetworkCache.description": "매 요청에 대해 네트워크 캐시를 건너뛸지를 제어합니다.",
			"chrome.env.description": "Optional dictionary of environment key/value pairs for the browser.",
			"chrome.file.description": "브라우저에서 열 로컬 html 파일",
			"chrome.label": "Chrome (preview)",
			"chrome.launch.description": "Launch Chrome to debug a URL",
			"chrome.launch.label": "Chrome: Launch",
			"chrome.pathMapping.description": "Chrome의 스크립트를 디스크의 스크립트로 확인하기 위한 URL/경로와 로컬 폴더 간 매핑",
			"chrome.port.description": "Chrome 원격 디버깅에 사용할 포트입니다.",
			"chrome.runtimeArgs.description": "선택적 인수가 런타임 실행 파일에 전달되었습니다.",
			"chrome.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
			"chrome.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
			"chrome.showAsyncStacks.description": "현재 호출 스택을 발생시킨 비동기 호출을 표시합니다.",
			"chrome.skipFiles.description": "디버그할 때 건너뛸 파일이나 폴더 이름 또는 경로 GLOB의 배열입니다.",
			"chrome.smartStep.description": "소스 매핑된 파일에서 매핑되지 않은 줄을 단계별로 자동 실행합니다. 예를 들어 비동기/대기 또는 기타 기능을 다운 컴파일할 때 TypeScript가 자동으로 생성하는 코드입니다.",
			"chrome.sourceMapPathOverrides.description": "소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 세트입니다. README에서 자세한 정보를 참조하세요.",
			"chrome.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우에만).",
			"chrome.timeout.description": "이 시간(밀리초) 동안 Chrome에 연결하려고 다시 시도합니다. 기본값은 10000ms입니다.",
			"chrome.url.description": "Will search for a tab with this exact url and attach to it, if found",
			"chrome.urlFilter.description": "이 url로 페이지를 검색하고 찾는 경우 연결합니다. * 와일드카드를 사용할 수 있습니다.",
			"chrome.userDataDir.description": "기본적으로 Chrome은 임시 폴더에 있는 별도의 사용자 프로필로 시작됩니다. 이 설정을 재정의하려면 이 옵션을 사용합니다. 기본 사용자 프로필로 시작하려면 false로 설정합니다.",
			"chrome.webRoot.description": "웹 서버 루트의 작업 영역 절대 경로를 지정합니다. 디스크의 파일에 대한 `/app.js` 와 같은 경로를 확인하는 데 사용합니다. \"/\"에 대한 pathMapping의 줄임 표기입니다.",
			"configuration.npmScriptLensLocation": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
			"configuration.terminalOptions": "Default launch options for the JavaScript debug terminal and npm scripts.",
			"configuration.usePreview": "Use the new in-preview JavaScript debugger for Node.js and Chrome.",
			"configuration.warnOnLongPrediction": "Whether a loading prompt should be shown if breakpoint prediction takes a while.",
			"debug.npm.edit": "Edit package.json",
			"debug.npm.noScripts": "No npm scripts found in your package.json",
			"debug.npm.noWorkspaceFolder": "You need to open a workspace folder to debug npm scripts.",
			"debug.npm.parseError": "Could not read {0}: {1}",
			"debug.npm.script": "Debug NPM Script",
			"debug.terminal.label": "Create JavaScript Debug Terminal",
			"debug.terminal.program.description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
			"debug.terminal.snippet.label": "Run \"npm start\" in a debug terminal",
			"errors.timeout": "{0}: timeout after {1}ms",
			"extension.description": "An extension for debugging Node.js programs and Chrome.",
			"extensionHost.label": "VS Code Extension Development (preview)",
			"extensionHost.launch.config.name": "확장 시작",
			"extensionHost.launch.env.description": "확장 호스트에 전달된 환경 변수입니다.",
			"extensionHost.launch.runtimeExecutable.description": "VS Code의 절대 경로입니다.",
			"extensionHost.launch.stopOnEntry.description": "시작한 후 자동으로 확장 호스트를 중지합니다.",
			"extensionHost.snippet.launch.description": "디버그 모드에서 VS Code 확장 시작",
			"extensionHost.snippet.launch.label": "VS Code 확장 개발",
			"longPredictionWarning.disable": "다시 표시 안 함",
			"longPredictionWarning.message": "It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.",
			"longPredictionWarning.noFolder": "No workspace folder open.",
			"longPredictionWarning.open": "Open launch.json",
			"node.address.description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
			"node.attach.attachExistingChildren.description": "Whether to attempt to attach to already-spawned child processes.",
			"node.attach.attachSpawnedProcesses.description": "Whether to set environment variables in the attached process to track spawned children.",
			"node.attach.config.name": "연결",
			"node.attach.processId.description": "연결할 프로세스 ID입니다.",
			"node.attach.restart.description": "Try to reconnect to the program if we lose connection.",
			"node.console.title": "노드 디버그 콘솔",
			"node.disableOptimisticBPs.description": "소스 맵이 해당 파일에 대해 로드될 때까지 파일에 중단점을 설정하지 않습니다.",
			"node.label": "Node.js (preview)",
			"node.launch.args.description": "프로그램에 전달된 명령줄 인수입니다.",
			"node.launch.autoAttachChildProcesses.description": "디버거를 새로 생성된 자식 프로세스에 자동으로 연결합니다.",
			"node.launch.config.name": "시작",
			"node.launch.console.description": "디버그 대상을 시작할 위치입니다.",
			"node.launch.console.externalTerminal.description": "사용자 설정을 통해 구성 가능한 외부 터미널",
			"node.launch.console.integratedTerminal.description": "VS Code의 통합 터미널",
			"node.launch.console.internalConsole.description": "VS Code 디버그 콘솔(프로그램에서 입력 읽기를 지원하지 않음)",
			"node.launch.cwd.description": "디버그 중인 프로그램의 작업 디렉터리의 절대 경로입니다.",
			"node.launch.env.description": "프로그램에 전달된 환경 변수입니다. 'null' 값으로 설정하면 변수가 환경에서 제거됩니다.",
			"node.launch.envFile.description": "환경 변수 정의가 포함된 파일의 절대 경로입니다.",
			"node.launch.logging": "Logging configuration",
			"node.launch.logging.cdp": "Path to the log file for Chrome DevTools Protocol messages",
			"node.launch.logging.dap": "Path to the log file for Debug Adapter Protocol messages",
			"node.launch.outputCapture.description": "출력 메시지를 캡처하는 위치: 디버그 API 또는 stdout/stderr 스트림",
			"node.launch.program.description": "프로그램의 절대 경로입니다. 생성된 값은 package.json 및 열린 파일을 보고 추측한 것입니다. 이 특성을 편집하세요.",
			"node.launch.restart.description": "Try to restart the program if it exits with a non-zero exit code.",
			"node.launch.runtimeArgs.description": "선택적 인수가 런타임 실행 파일에 전달되었습니다.",
			"node.launch.runtimeExecutable.description": "사용할 런타임입니다. PATH에서 사용할 수 있는 런타임의 이름 또는 절대 경로입니다. 생략하면 `node`로 간주합니다.",
			"node.launch.runtimeVersion.description": "사용할 `node` 런타임의 버전입니다. `nvm`이 필요합니다.",
			"node.launch.useWSL.deprecation": "'useWSL'은 사용되지 않으며 지원이 중단됩니다. 대신 '원격 - WSL' 확장을 사용하세요.",
			"node.launch.useWSL.description": "Linux용 Windows 하위 시스템을 사용합니다.",
			"node.localRoot.description": "프로그램이 포함된 로컬 디렉터리의 경로입니다.",
			"node.pauseForSourceMap.description": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
			"node.port.description": "연결할 디버그 포트입니다. 기본값은 5858입니다.",
			"node.processattach.config.name": "프로세스에 연결",
			"node.remoteRoot.description": "프로그램이 포함된 원격 디렉터리의 절대 경로입니다.",
			"node.resolveSourceMapLocations.description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
			"node.showAsyncStacks.description": "현재 호출 스택을 발생시킨 비동기 호출을 표시합니다.",
			"node.snippet.attach.description": "실행 중인 노드 프로그램에 연결",
			"node.snippet.attach.label": "Node.js: 연결",
			"node.snippet.attachProcess.description": "프로세스 선택기를 열어 연결할 Node 프로세스 선택 ",
			"node.snippet.attachProcess.label": "Node.js: 프로세스에 연결",
			"node.snippet.electron.description": "Electron 주 프로세스 디버그",
			"node.snippet.electron.label": "Node.js: Electron 주",
			"node.snippet.gulp.description": "Gulp 작업 디버그(프로젝트에 로컬 Gulp가 설치되어 있는지 확인하세요.)",
			"node.snippet.gulp.label": "Node.js: Gulp 작업",
			"node.snippet.launch.description": "디버그 모드에서 노드 프로그램 시작",
			"node.snippet.launch.label": "Node.js: 프로그램 실행",
			"node.snippet.mocha.description": "Mocha 테스트 디버그",
			"node.snippet.mocha.label": "Node.js: Mocha 테스트",
			"node.snippet.nodemon.description": "nodemon을 사용하여 소스 변경 내용에 대한 디버그 세션 다시 시작",
			"node.snippet.nodemon.label": "Node.js: Nodemon 설정",
			"node.snippet.npm.description": "npm 'debug' 스크립트를 통해 노드 프로그램 시작",
			"node.snippet.npm.label": "Node.js: NPM을 통해 시작",
			"node.snippet.remoteattach.description": "원격 노드 프로그램의 디버그 포트에 연결합니다.",
			"node.snippet.remoteattach.label": "Node.js: 원격 프로그램에 연결",
			"node.snippet.yo.description": "yeoman 생성기 디버그(프로젝트 폴더에서 `npm link`를 실행하여 설치)",
			"node.snippet.yo.label": "Node.js: Yeoman 생성기",
			"node.sourceMapPathOverrides.description": "소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 집합입니다.",
			"node.sourceMaps.description": "JavaScript 소스 맵을 사용합니다(있는 경우에만).",
			"node.stopOnEntry.description": "시작한 후 자동으로 프로그램을 중지합니다.",
			"node.timeout.description": "이 시간(밀리초) 동안 Node.js에 연결하려고 다시 시도합니다. 기본값은 10000ms입니다.",
			"open.loaded.script": "로드된 스크립트 열기",
			"outFiles.description": "소스 맵이 사용되는 경우 이러한 GLOB 패턴은 생성된 JavaScript 파일을 지정합니다. 패턴이 '!'로 시작하면 파일이 제외됩니다. 지정하지 않으면 생성된 코드가 소스와 동일한 디렉터리에 있습니다.",
			"pretty.print.script": "Pretty print for debugging",
			"remove.browser.breakpoint": "Remove Browser Breakpoint",
			"remove.browser.breakpoint.all": "Remove All Browser Breakpoints",
			"skipFiles.description": "디버그할 때 건너뛰는 파일의 GLOB 패턴 배열입니다. `<node_internals>/**` 패턴은 모든 내부 Node.js 모듈과 일치합니다.",
			"smartStep.description": "생성된 코드 중 원래 소스로 다시 매핑할 수 없는 코드를 단계별로 자동 실행합니다.",
			"start.with.stop.on.entry": "디버깅 시작 및 항목에서 중지",
			"toggle.skipping.this.file": "이 파일에 대한 건너뛰기 토글",
			"trace.boolean.description": "Trace may be set to 'true' to write diagnostic logs to the disk.",
			"trace.console.description": "Configures whether logs are also returned to the debug console.",
			"trace.description": "Configures what diagnostic output is produced.",
			"trace.level.description": "Configures the level of logs recorded.",
			"trace.logFile.description": "Configures where on disk logs are written.",
			"trace.tags.description": "Configures what types of logs are recorded."
		}
	}
}