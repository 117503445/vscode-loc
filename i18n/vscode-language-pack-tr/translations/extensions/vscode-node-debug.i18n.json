{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"extension.description": "Node.js debugging support (versions < 8.0)",
			"node.label": "Node.js",
			"open.loaded.script": "Yüklenen Betiği Aç",
			"attach.node.process": "Node İşlemine Bağla",
			"toggle.skipping.this.file": "Bu Dosyayı Atlamayı Aç/Kapa",
			"start.with.stop.on.entry": "Start Debugging and Stop on Entry",
			"smartStep.description": "Orijinal kaynağa geri eşlenemeyen oluşturulmuş kodlar üzerinde otomatik olarak adım adım ilerleyin.",
			"skipFiles.description": "An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.",
			"outFiles.description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
			"outDir.deprecationMessage": "'outDir' özniteliği kullanım dışıdır, bunun yerine 'outFiles' özniteliğini kullanın.",
			"trace.description": "Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.",
			"launch.args.description": "Programa iletilecek komut satırı argümanları.",
			"debug.node.showUseWslIsDeprecatedWarning.description": "Controls whether to show a warning when the 'useWSL' attribute is used.",
			"node.protocol.description": "Kullanılacak Node.js hata ayıklama protokolü.",
			"node.protocol.auto.description": "Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+",
			"node.protocol.inspector.description": "New protocol supported by Node.js versions >= 6.3",
			"node.protocol.legacy.description": "Old protocol supported by Node.js versions < 8.0",
			"node.sourceMaps.description": "JavaScript kaynak haritaları kullanın (varsa).",
			"node.stopOnEntry.description": "Başlatıldıktan sonra programı otomatik olarak durdur.",
			"node.port.description": "Bağlanacak hata ayıklama portu. Varsayılan 5858'tir.",
			"node.address.description": "TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.",
			"node.timeout.description": "Node.js'ye yeniden bağlanmak için bu sayıda milisaniye kadar tekrar deneyin. Varsayılan 10000 ms'dir.",
			"node.restart.description": "Node.js sonlandırıldıktan sonra oturumu yeniden başlatın.",
			"node.localRoot.description": "Programı içeren yerel klasörün yolu.",
			"node.remoteRoot.description": "Programı içeren uzak klasörün mutlak yolu.",
			"node.showAsyncStacks.description": "Geçerli çağrı yığınına götüren asenkron çağrıları gösterin. Sadece 'denetçi' protokolü ile kullanılır.",
			"node.sourceMapPathOverrides.description": "Kaynak dosyalarının konumlarını, kaynak haritanın belirttiği yerden disk üzerindeki konumlarına yeniden yazmak için bir eşlemeler dizisi.",
			"node.disableOptimisticBPs.description": "Don't set breakpoints in any file until a sourcemap has been loaded for that file.",
			"node.launch.program.description": "Programın mutlak yolu. Değer, package.json ve açık olan dosyalara bakılarak tahmin edilerek oluşturulmuştur.",
			"node.launch.externalConsole.deprecationMessage": "'externalConsole' özniteliği kullanım dışıdır, bunun yerine 'console' özniteliğini kullanın.",
			"node.launch.console.description": "Hata ayıklama hedefinin başlatılacağı yer.",
			"node.launch.console.internalConsole.description": "VS Code Hata Ayıklama Konsolu (bir programdan girdi okumayı desteklemiyor)",
			"node.launch.console.integratedTerminal.description": "VS Code'un entegre terminali",
			"node.launch.console.externalTerminal.description": "External terminal that can be configured via user settings",
			"node.launch.cwd.description": "Hata ayıklama yapılan programın çalışma klasörünün mutlak yolu.",
			"node.launch.runtimeExecutable.description": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
			"node.launch.runtimeArgs.description": "Çalışma zamanı yürütülebilir dosyasına iletilecek isteğe bağlı argümanlar.",
			"node.launch.runtimeVersion.description": "Version of `node` runtime to use. Requires `nvm`.",
			"node.launch.env.description": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
			"node.launch.envFile.description": "Ortam değişkenleri tanımlamalarını içeren bir dosyanın mutlak yolu.",
			"node.launch.useWSL.description": "Use Windows Subsystem for Linux.",
			"node.launch.useWSL.deprecation": "'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.",
			"node.launch.outputCapture.description": "Çıktı mesajları nereden yakalanacak: Hata ayıklama API'si veya stdout/stderr akışları.",
			"node.launch.autoAttachChildProcesses.description": "Yeni alt işlemlere hata ayıklayıcıyı otomatik olarak bağla.",
			"node.launch.config.name": "Başlat",
			"node.attach.processId.description": "ID of process to attach to.",
			"node.attach.config.name": "Bağla",
			"node.processattach.config.name": "İşleme Bağla",
			"node.snippet.launch.label": "Node.js: Programı Başlat",
			"node.snippet.launch.description": "Bir Node programını hata ayıklama modunda başlatın",
			"node.snippet.npm.label": "Node.js: NPM ile Başlat",
			"node.snippet.npm.description": "Launch a node program through an npm `debug` script",
			"node.snippet.attach.label": "Node.js: Bağla",
			"node.snippet.attach.description": "Çalışan bir node programına bağlayın",
			"node.snippet.remoteattach.label": "Node.js: Uzak Programa Bağla",
			"node.snippet.remoteattach.description": "Bir uzak node programınının hata ayıklama portuna bağlayın",
			"node.snippet.attachProcess.label": "Node.js: İşleme Bağla",
			"node.snippet.attachProcess.description": "Bağlanacak node işlemini seçmek için işlem seçicisini açın",
			"node.snippet.nodemon.label": "Node.js: Nodemon Kurulumu",
			"node.snippet.nodemon.description": "Kaynak değişimlerinde bir hata ayıklama oturumunu yeniden başlatmak için nodemon kullanın",
			"node.snippet.mocha.label": "Node.js: Mocha Testleri",
			"node.snippet.mocha.description": "Mocha testlerinin hatalarını ayıkla",
			"node.snippet.yo.label": "Node.js: Yeoman oluşturucu",
			"node.snippet.yo.description": "Debug yeoman generator (install by running `npm link` in project folder)",
			"node.snippet.gulp.label": "Node.js: Gulp görevi",
			"node.snippet.gulp.description": "Gulp görevinin hatalarını ayıkla (projenizde gulp'ın yerel olarak yüklenmiş olduğundan emin olun)",
			"node.snippet.electron.label": "Node.js: Electron Ana İşlemi",
			"node.snippet.electron.description": "Electron ana işleminin hatalarını ayıkla"
		}
	}
}