{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"extension.description": "Node.js hata ayıklama desteği (sürüm < 8.0)",
			"node.label": "Node.js",
			"open.loaded.script": "Yüklenen Betiği Aç",
			"attach.node.process": "Node İşlemine Bağla",
			"toggle.skipping.this.file": "Bu Dosyayı Atlamayı Aç/Kapa",
			"toggle.auto.attach": "Otomatik Bağlamayı Aç/Kapat",
			"loaded.scripts.view.name": "Yüklenen Betikler",
			"smartStep.description": "Orijinal kaynağa geri eşlenemeyen oluşturulmuş kodlar üzerinde otomatik olarak adım adım ilerleyin.",
			"skipFiles.description": "Hata ayıklama yapılırken atlanacak dosyalar için bir glob desenleri dizisi.",
			"outFiles.description": "Kaynak haritaları etkinleştirilmiş ise, bu glob desenleri oluşturulan JavaScript dosyalarını belirtir. '!' ile başlayan kalıpta dosyalar hariç tutulur. Eğer belirtilmemişse, oluşturulan kodun kaynağıyla aynı dizinde olması beklenir.",
			"outDir.deprecationMessage": "'outDir' özniteliği kullanım dışıdır, bunun yerine 'outFiles' özniteliğini kullanın.",
			"trace.description": "Teşhis çıktısı üretin. Bunu, \"true\" olarak ayarlamak yerine, bir veya birden fazla seçicileri virgülle ayrılmış şekilde listeleyebilirsiniz. 'ayrıntılı' seçicisi çok detaylı çıktıyı etkinleştirir.",
			"launch.args.description": "Programa iletilecek komut satırı argümanları.",
			"node.protocol.description": "Kullanılacak Node.js hata ayıklama protokolü.",
			"node.protocol.auto.description": "otomatik olarak en iyi protokolü tespit etmeye çalışın, Node 8.0+'ı başlatmak için 'denetçi'yi seçin",
			"node.protocol.inspector.description": "yeni protokol Node.js >= 6.3 sürümleri tarafından desteklenir",
			"node.protocol.legacy.description": "eski protokol Node.js < 8.0 sürümleri tarafından desteklenir",
			"node.sourceMaps.description": "JavaScript kaynak haritaları kullanın (varsa).",
			"node.stopOnEntry.description": "Başlatıldıktan sonra programı otomatik olarak durdur.",
			"node.port.description": "Bağlanacak hata ayıklama portu. Varsayılan 5858'tir.",
			"node.address.description": "Hata ayıklama yapılacak işlemin TCP/IP adresleri (sadece Node.js >= 5.0 için). Varsayılan 'localhost'tur.",
			"node.timeout.description": "Node.js'ye yeniden bağlanmak için bu sayıda milisaniye kadar tekrar deneyin. Varsayılan 10000 ms'dir.",
			"node.restart.description": "Node.js sonlandırıldıktan sonra oturumu yeniden başlatın.",
			"node.localRoot.description": "Programı içeren yerel klasörün yolu.",
			"node.remoteRoot.description": "Programı içeren uzak klasörün mutlak yolu.",
			"node.showAsyncStacks.description": "Geçerli çağrı yığınına götüren asenkron çağrıları gösterin. Sadece 'denetçi' protokolü ile kullanılır.",
			"node.sourceMapPathOverrides.description": "Kaynak dosyalarının konumlarını, kaynak haritanın belirttiği yerden disk üzerindeki konumlarına yeniden yazmak için bir eşlemeler dizisi.",
			"node.launch.program.description": "Programın mutlak yolu. Değer, package.json ve açık olan dosyalara bakılarak tahmin edilerek oluşturulmuştur.",
			"node.launch.externalConsole.deprecationMessage": "'externalConsole' özniteliği kullanım dışıdır, bunun yerine 'console' özniteliğini kullanın.",
			"node.launch.console.description": "Hata ayıklama hedefinin başlatılacağı yer.",
			"node.launch.console.internalConsole.description": "VS Code Hata Ayıklama Konsolu (bir programdan girdi okumayı desteklemiyor)",
			"node.launch.console.integratedTerminal.description": "VS Code'un entegre terminali",
			"node.launch.console.externalTerminal.description": "kullanıcı ayarları üzerinden yapılandırılabilen harici terminal",
			"node.launch.cwd.description": "Hata ayıklama yapılan programın çalışma klasörünün mutlak yolu.",
			"node.launch.runtimeExecutable.description": "Kullanılacak çalışma zamanı. Mutlak bir yol veya PATH'da mevcut bir çalışma zamanı adı kullanılabilir. Eğer atlanırsa 'node' varsayılır.",
			"node.launch.runtimeArgs.description": "Çalışma zamanı yürütülebilir dosyasına iletilecek isteğe bağlı argümanlar.",
			"node.launch.runtimeVersion.description": "Kullanılacak 'node' çalışma zamanının sürümü. 'nvm'e ihtiyaç duyar .",
			"node.launch.env.description": "Programa iletilecek ortam değişkenleri. 'null' değeri, değişkeni ortamdan kaldırır.",
			"node.launch.envFile.description": "Ortam değişkenleri tanımlamalarını içeren bir dosyanın mutlak yolu.",
			"node.launch.useWSL.description": "Linux için Windows Alt Sistemi'ni kullan.",
			"node.launch.outputCapture.description": "Çıktı mesajları nereden yakalanacak: Hata ayıklama API'si veya stdout/stderr akışları.",
			"node.launch.autoAttachChildProcesses.description": "Yeni alt işlemlere hata ayıklayıcıyı otomatik olarak bağla.",
			"node.launch.config.name": "Başlat",
			"node.attach.processId.description": "Bağlanacak işlem Id'si.",
			"node.attach.config.name": "Bağla",
			"node.processattach.config.name": "İşleme Bağla",
			"node.snippet.launch.label": "Node.js: Programı Başlat",
			"node.snippet.launch.description": "Bir Node programını hata ayıklama modunda başlatın",
			"node.snippet.npm.label": "Node.js: NPM ile Başlat",
			"node.snippet.npm.description": "Bir node programını bir npm 'hata ayıklama' betiği ile başlatın",
			"node.snippet.attach.label": "Node.js: Bağla",
			"node.snippet.attach.description": "Çalışan bir node programına bağlayın",
			"node.snippet.remoteattach.label": "Node.js: Uzak Programa Bağla",
			"node.snippet.remoteattach.description": "Bir uzak node programınının hata ayıklama portuna bağlayın",
			"node.snippet.attachProcess.label": "Node.js: İşleme Bağla",
			"node.snippet.attachProcess.description": "Bağlanacak node işlemini seçmek için işlem seçicisini açın",
			"node.snippet.nodemon.label": "Node.js: Nodemon Kurulumu",
			"node.snippet.nodemon.description": "Kaynak değişimlerinde bir hata ayıklama oturumunu yeniden başlatmak için nodemon kullanın",
			"node.snippet.mocha.label": "Node.js: Mocha Testleri",
			"node.snippet.mocha.description": "Mocha testlerinin hatalarını ayıkla",
			"node.snippet.yo.label": "Node.js: Yeoman oluşturucu",
			"node.snippet.yo.description": "Yeoman oluşturucunun hatalarını ayıkla (proje klasöründe 'npm link' komutunu çalıştırarak yükleyin)",
			"node.snippet.gulp.label": "Node.js: Gulp görevi",
			"node.snippet.gulp.description": "Gulp görevinin hatalarını ayıkla (projenizde gulp'ın yerel olarak yüklenmiş olduğundan emin olun)",
			"node.snippet.electron.label": "Node.js: Electron Ana İşlemi",
			"node.snippet.electron.description": "Electron ana işleminin hatalarını ayıkla"
		},
		"out/node/nodeDebug": {
			"setVariable.error": "Değer ayarlama desteklenmiyor",
			"exception.paused.promise.rejection": "Promise Reddinde Duraklatıldı",
			"exception.promise.rejection.text": "Promise Reddi ({0})",
			"exception.promise.rejection": "Promise Reddi",
			"reason.description.step": "Adımda duraklatıldı",
			"reason.description.breakpoint": "Kesme noktasında duraklatıldı",
			"reason.description.exception": "İstisnada duraklatıldı",
			"reason.description.user_request": "Kullanıcı isteği üzerine duraklatıldı",
			"reason.description.entry": "Girdide duraklatıldı",
			"reason.description.debugger_statement": "Hata ayıklayıcı ifadesinde duraklatıldı",
			"reason.description.restart": "Kare girişinde duraklatıldı",
			"exceptions.all": "Tüm İstisnalar",
			"exceptions.uncaught": "Yakalanmamış İstisnalar",
			"exceptions.rejects": "Promise Retleri",
			"VSND2028": "Bilinmeyen konsol türü '{0}'.",
			"attribute.wls.not.exist": "Linux için Windows Alt Sistemi kurulumu bulunamıyor",
			"VSND2001": "PATH değişkeninde '{0}' çalışma zamanı bulunamadı. '{0}'ın yüklü olduğundan emin olun.",
			"program.path.case.mismatch.warning": "Program yolu ile diskteki dosya arasında büyük küçük karakter farkları var; bu, kesme noktalarının atlanmasına neden olabilir.",
			"VSND2002": "'{0}' programı başlatılamıyor; kaynak haritalarını yapılandırmak yardımcı olabilir.",
			"VSND2009": "İlgili JavaScript bulunamadığı için '{0}' programı başlatılamadı.",
			"VSND2003": "'{0}' programı başlatılamıyor; '{1}' özniteliğini ayarlamak yardımcı olabilir.",
			"VSND2029": "Dosyadan ortam değişkenleri yüklenemedi ({0}).",
			"node.console.title": "Node Hata Ayıklama Konsolu",
			"VSND2011": "Terminalde hata ayıklama hedefi başlatılamıyor ({0}).",
			"VSND2017": "Hata ayıklama hedefi başlatılamıyor ({0}).",
			"VSND2010": "Çalışma zamanı işlemine bağlanılamıyor (sebep: {0}).",
			"VSND2033": "Çalışma zamanına bağlanılamadı; bu çalışma zamanının 'eski' hata ayıklama modunda olduğundan emin olun.",
			"VSND2034": "'eski' protokol ile çalışma zamanına bağlanılamıyor; 'denetçi' protokolünü kullanmayı deneyin.",
			"file.on.disk.changed": "Diskte dosya değiştiğinden, doğrulanmadı. Lütfen hata ayıklama oturumunu yeniden başlatın.",
			"VSND2019": "{0} dahili modülü bulunamadı.",
			"sourcemapping.fail.message": "Kesme noktası görmezden gelindi çünkü oluşturulan kod bulunamadı (kaynak haritası problemi olabilir).",
			"VSND2022": "Program JavaScript'in dışında duraklatıldığı için çağrı yığını yok.",
			"VSND2023": "Mevcut çağrı yığını yok.",
			"VSND2018": "Mevcut çağrı yığını yok ({_command}: {_error}).",
			"origin.from.node": "Node.js'den salt okunur içerik",
			"origin.from.remote.node": "Uzak Node.js'den salt okunur içerik",
			"origin.core.module": "salt okunur çekirdek modülü",
			"source.skipFiles": "'skipFiles' nedeniyle atlandı",
			"source.smartstep": "'smartStep' nedeniyle atlandı",
			"origin.inlined.source.map": "Kaynak haritasından salt okunur satır içi içerik",
			"anonymous.function": "(anonim fonksiyon)",
			"scope.local.with.count": "Yerel ({0}/{1})",
			"scope.unknown": "Bilinmeyen Kapsam Türü: {0}",
			"scope.exception": "İstisna",
			"eval.not.available": "mevcut değil",
			"eval.invalid.expression": "geçersiz ifade: {0}",
			"source.not.found": "İçerik alınamadı.",
			"attribute.path.not.exist": "'{0}' özniteliği mevcut değil ('{1}').",
			"attribute.path.not.absolute": "'{0}' özniteliği mutlak değil ('{1}'); mutlak hale getirmek için, '{2}' yolunu ön ek olarak eklemeyi düşünün.",
			"more.information": "Daha Fazla Bilgi",
			"VSND2015": "'{_request}' isteği Node.js yanıt vermediği için iptal edildi.",
			"VSND2016": "Node.js makul bir süre içinde '{_request}' isteğine yanıt vermedi.",
			"scope.global": "Global",
			"scope.local": "Yerel",
			"scope.with": "With",
			"scope.closure": "Closure",
			"scope.catch": "Catch",
			"scope.block": "Blok",
			"scope.script": "Betik"
		},
		"out/node/nodeV8Protocol": {
			"not.connected": "çalışma zamanına bağlı değil",
			"runtime.unresponsive": " Node.js yanıt vermediği için iptal edildi",
			"runtime.timeout": "{0} ms sonra zaman aşımı"
		},
		"out/node/extension/autoAttach": {
			"process.with.pid.label": "İşlem {0}"
		},
		"out/node/extension/cluster": {
			"child.process.with.pid.label": "Alt işlem {0}"
		},
		"out/node/extension/configurationProvider": {
			"program.not.found.message": "Hata ayıklamak için bir program bulunamıyor",
			"NVS_HOME.not.found.message": "'runtimeVersion' özniteliği 'nvs' Node.js sürüm yöneticisine ihtiyaç duyuyor.",
			"NVM_HOME.not.found.message": "'runtimeVersion' özniteliği 'nvm-windows' veya 'nvs' Node.js sürüm yöneticisine ihtiyaç duyuyor.",
			"NVM_DIR.not.found.message": "'runtimeVersion' özniteliği 'nvm' veya 'nvs' Node.js sürüm yöneticisine ihtiyaç duyuyor.",
			"runtime.version.not.found.message": "Node.js '{0}' sürümü '{1}' için yüklenmemiş.",
			"node.launch.config.name": "Programı Başlat",
			"mern.starter.explanation": "'{0}' projesi için başlatma yapılandırması oluşturuldu.",
			"program.guessed.from.package.json.explanation": "'package.json' temel alınarak oluşturulan yapılandırmayı başlat.",
			"outFiles.explanation": "'outFiles' özniteliğindeki glob desen veya desenlerini ayarlayın böylece onlar, oluşturulan JavaScript'leri kapsasınlar."
		},
		"out/node/extension/extension": {
			"status.text.auto.attach.on": "Otomatik Bağlama: Açık",
			"status.text.auto.attach.off": "Otomatik Bağlama: Kapalı",
			"status.tooltip.auto.attach": "Hata ayıklama modundayken otomatik olarak node.js işlemlerine bağla"
		},
		"out/node/extension/loadedScripts": {
			"select.script": "Bir betik seçin",
			"no.loaded.scripts": "Yüklü bir betik yok"
		},
		"out/node/extension/processPicker": {
			"pid.error": "İşleme bağla: '{0}' işlemi hata ayıklama moduna geçirilemedi.",
			"process.id.error": "İşleme bağla: '{0}' bir işlem Id'si gibi görünmüyor",
			"pickNodeProcess": "Bağlanacak node.js işlemini seçin",
			"process.picker.error": "İşlem seçici başarısız oldu ({0})",
			"process.id.port.signal": "işlem id'si, {0}, hata ayıklama portu: {1} ({2})",
			"process.id.signal": "işlem id'si: {0} ({1})",
			"process.id.port": "işlem id'si, {0}, hata ayıklama portu: {1}",
			"process.id.port.legacy": "işlem id'si: {0}, hata ayıklama portu: {1} (eski protokol)",
			"cannot.enable.debug.mode.error": "İşleme bağla: işlem '{0}' için hata ayıklama modu etkinleştirilemiyor ({1})."
		},
		"out/node/extension/protocolDetection": {
			"protocol.switch.legacy.detected": "Eski protokol tespit edildiği için onunla hata ayıklama yapılıyor.",
			"protocol.switch.unknown.error": "Node.js sürümü tespit edilemediği için eski protokol ile hata ayıklama yapılıyor ({0})",
			"protocol.switch.legacy.version": "Node.js {0} tespit edildiği için eski protokol ile hata ayıklama yapılıyor."
		}
	}
}