{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"add.browser.breakpoint": "Add Browser Breakpoint",
			"attach.node.process": "Attach to Node Process (preview)",
			"chrome.address.description": "TCP/IP адрес порта отладки",
			"chrome.attach.description": "Attach to an instance of Chrome already in debug mode",
			"chrome.attach.label": "Chrome: Attach",
			"chrome.baseUrl.description": "Base URL to resolve paths baseUrl. baseURL is trimmed when mapping URLs to the files on disk. Defaults to the launch URL domain.",
			"chrome.cwd.description": "Дополнительный рабочий каталог для исполняемого файла среды выполнения.",
			"chrome.disableNetworkCache.description": "Определяет, нужно ли пропустить сетевой кэш для каждого запроса",
			"chrome.env.description": "Optional dictionary of environment key/value pairs for the browser.",
			"chrome.file.description": "Локальный HTML-файл, открываемый в браузере",
			"chrome.label": "Chrome (preview)",
			"chrome.launch.description": "Launch Chrome to debug a URL",
			"chrome.launch.label": "Chrome: Launch",
			"chrome.pathMapping.description": "Сопоставление URL-адресов или путей к локальным директориям, необходимое для привязки скриптов в Chrome к скриптам на диске.",
			"chrome.port.description": "Порт, используемый для отладки.",
			"chrome.runtimeArgs.description": "Необязательные аргументы, переданные исполняемому файлу среды выполнения.",
			"chrome.runtimeExecutable.description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
			"chrome.server.description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
			"chrome.showAsyncStacks.description": "Отображение асинхронных вызовов, которые привели к текущему стеку вызовов",
			"chrome.skipFiles.description": "Массив имен файлов, имен папок или стандартных масок, которые следует пропустить при отладке.",
			"chrome.smartStep.description": "Автоматически обрабатывать несопоставленные строки в файлах сопоставлений исходного кода, например, код, который TypeScript формирует автоматически при компиляции с async/await и другими параметрами.",
			"chrome.sourceMapPathOverrides.description": "Набор сопоставлений для изменения расположения исходных файлов с расположения, указанного в карте исходного кода, на расположение этих файлов на диске. Дополнительные сведения см. в файле README.",
			"chrome.sourceMaps.description": "Использовать карты исходного кода JavaScript (если они существуют).",
			"chrome.timeout.description": "Повторять в течение этого указанного количества миллисекунд для подключения к Node.js. Значение по умолчанию — 10000 мс. ",
			"chrome.url.description": "Will search for a tab with this exact url and attach to it, if found",
			"chrome.urlFilter.description": "Найдет страницу с указанным URL-адресом и присоединится к ней, если она найдена. Можно указывать подстановочные знаки *.",
			"chrome.userDataDir.description": "По умолчанию Chrome запускается с профилем отдельного пользователя в папке temp. Используйте этот параметр, чтобы переопределить это поведение. Укажите значение false, чтобы запустить Chrome с вашим профилем пользователя по умолчанию.",
			"chrome.webRoot.description": "Указывает абсолютный путь рабочей области начиная с корневого каталога веб-сервера. Используется для преобразования путей вида \"/app.js\" в пути к файлам на диске. Сокращенный вариант pathMapping для \"/\"",
			"configuration.npmScriptLensLocation": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
			"configuration.terminalOptions": "Default launch options for the JavaScript debug terminal and npm scripts.",
			"configuration.usePreview": "Use the new in-preview JavaScript debugger for Node.js and Chrome.",
			"configuration.warnOnLongPrediction": "Whether a loading prompt should be shown if breakpoint prediction takes a while.",
			"debug.npm.edit": "Edit package.json",
			"debug.npm.noScripts": "No npm scripts found in your package.json",
			"debug.npm.noWorkspaceFolder": "You need to open a workspace folder to debug npm scripts.",
			"debug.npm.parseError": "Could not read {0}: {1}",
			"debug.npm.script": "Debug NPM Script",
			"debug.terminal.label": "Create JavaScript Debug Terminal",
			"debug.terminal.program.description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
			"debug.terminal.snippet.label": "Run \"npm start\" in a debug terminal",
			"errors.timeout": "{0}: timeout after {1}ms",
			"extension.description": "An extension for debugging Node.js programs and Chrome.",
			"extensionHost.label": "VS Code Extension Development (preview)",
			"extensionHost.launch.config.name": "Запуск расширения",
			"extensionHost.launch.env.description": "Переменные среды переданы в хост-процесс для расширений.",
			"extensionHost.launch.runtimeExecutable.description": "Абсолютный путь к VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Автоматически остановить хост-процесс для расширений после запуска.",
			"extensionHost.snippet.launch.description": "Запуск расширения VS Code в режиме отладки",
			"extensionHost.snippet.launch.label": "Разработка расширения VS Code",
			"longPredictionWarning.disable": "Больше не показывать",
			"longPredictionWarning.message": "It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.",
			"longPredictionWarning.noFolder": "No workspace folder open.",
			"longPredictionWarning.open": "Open launch.json",
			"node.address.description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
			"node.attach.attachExistingChildren.description": "Whether to attempt to attach to already-spawned child processes.",
			"node.attach.attachSpawnedProcesses.description": "Whether to set environment variables in the attached process to track spawned children.",
			"node.attach.config.name": "Подключить",
			"node.attach.processId.description": "Идентификатор процесса, к которому необходимо подключиться.",
			"node.attach.restart.description": "Try to reconnect to the program if we lose connection.",
			"node.console.title": "Узел консоли отладки",
			"node.disableOptimisticBPs.description": "Не устанавливать точки останова в файле до тех пор, пока не загружена карта исходного кода для этого файла.",
			"node.label": "Node.js (preview)",
			"node.launch.args.description": "Аргументы командной строки, переданные в программу.",
			"node.launch.autoAttachChildProcesses.description": "Автоматически подключать отладчик к новым дочерним процессам.",
			"node.launch.config.name": "Запустить",
			"node.launch.console.description": "Где следует запускать целевой объект отладки.",
			"node.launch.console.externalTerminal.description": "Внешний терминал, который можно настроить в параметрах пользователя",
			"node.launch.console.integratedTerminal.description": "Интегрированный терминал VS Code",
			"node.launch.console.internalConsole.description": "Консоль отладки VS Code (не поддерживает чтение входных данных из программы)",
			"node.launch.cwd.description": "Абсолютный путь к рабочему каталогу отлаживаемой программы.",
			"node.launch.env.description": "Переменные среды, переданные программе. При указании значения \"null\" переменная удаляется из среды. ",
			"node.launch.envFile.description": "Абсолютный путь к файлу с определениями переменных среды.",
			"node.launch.logging": "Logging configuration",
			"node.launch.logging.cdp": "Path to the log file for Chrome DevTools Protocol messages",
			"node.launch.logging.dap": "Path to the log file for Debug Adapter Protocol messages",
			"node.launch.outputCapture.description": "Источник для получения выходных сообщений: API отладки, стандартный поток вывода или стандартный поток ошибок. ",
			"node.launch.program.description": "Абсолютный путь к программе. Созданное значение можно определить, взглянув на package.json и открытые файлы. Изменить этот атрибут.",
			"node.launch.restart.description": "Try to restart the program if it exits with a non-zero exit code.",
			"node.launch.runtimeArgs.description": "Необязательные аргументы, переданные исполняемому файлу среды выполнения.",
			"node.launch.runtimeExecutable.description": "Используемая среда выполнения. Абсолютный путь или имя среды выполнения, доступные в переменной PATH. Если не указано, предполагается \"node\".",
			"node.launch.runtimeVersion.description": "Используемая версия среды выполнения \"node\". Требует \"nvm\".",
			"node.launch.useWSL.deprecation": "\"useWSL\" объявлено нерекомендуемым, и его поддержка будет прекращена. Используйте вместо него расширение \"Remote - WSL\".",
			"node.launch.useWSL.description": "Использовать подсистему Windows для Linux.",
			"node.localRoot.description": "Путь к локальному каталогу, содержащему программу.",
			"node.pauseForSourceMap.description": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
			"node.port.description": "Порт отладки для присоединения. Значение по умолчанию — 5858.",
			"node.processattach.config.name": "Подключиться к процессу",
			"node.remoteRoot.description": "Абсолютный путь к удаленному каталогу, содержащему программу.",
			"node.resolveSourceMapLocations.description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
			"node.showAsyncStacks.description": "Отображение асинхронных вызовов, которые привели к текущему стеку вызовов.",
			"node.snippet.attach.description": "Подключиться к запущенной программе Node",
			"node.snippet.attach.label": "Node.js: подключение",
			"node.snippet.attachProcess.description": "Открыть средство выбора процессов для выбора процесса, к которому нужно подключиться",
			"node.snippet.attachProcess.label": "Node.js: подключение к процессу",
			"node.snippet.electron.description": "Отладка основного процесса Electron",
			"node.snippet.electron.label": "Node.js: основной Electron",
			"node.snippet.gulp.description": "Задача Gulp по отладке (убедитесь, что в вашем проекте установлен локальный Gulp)",
			"node.snippet.gulp.label": "Node.js: задача Gulp",
			"node.snippet.launch.description": "Запуск программы на базе Node в режиме отладки",
			"node.snippet.launch.label": "Node.js: запуск программы",
			"node.snippet.mocha.description": "Отладка тестов Mocha",
			"node.snippet.mocha.label": "Node.js: тесты Mocha",
			"node.snippet.nodemon.description": "Использование Nodemon для перезапуска сеанса отладки при изменениях исходного кода",
			"node.snippet.nodemon.label": "Node.js: настройка Nodemon",
			"node.snippet.npm.description": "Запуск программы на основе Node.js через сценарий отладки npm",
			"node.snippet.npm.label": "Node.js: запуск через NPM",
			"node.snippet.remoteattach.description": "Подключение к порту отладки удаленной программы Node",
			"node.snippet.remoteattach.label": "Node.js: подключение к удаленной программе",
			"node.snippet.yo.description": "Генератор Yeoman отладки (чтобы установить, выполните команду \"npm link\" в папке проекта)",
			"node.snippet.yo.label": "Node.js: генератор Yeoman",
			"node.sourceMapPathOverrides.description": "Набор сопоставлений для изменения расположения исходных файлов с расположения, указанного в карте исходного кода, на расположение этих файлов на диске.",
			"node.sourceMaps.description": "Использовать карты исходного кода JavaScript (если они существуют).",
			"node.stopOnEntry.description": "Автоматически остановить программу после запуска.",
			"node.timeout.description": "Повторять в течение этого количества миллисекунд для подключения к Node.js. Значение по умолчанию — 10 000 мс.",
			"open.loaded.script": "Открыть загруженный скрипт",
			"outFiles.description": "Если включены сопоставления исходного кода, эти глобальные шаблоны указывают созданные файлы JavaScript. Если шаблон начинается с \"!\", файлы исключаются. Если не указан, созданный код должен быть в том же каталоге, что и исходный.",
			"pretty.print.script": "Pretty print for debugging",
			"remove.browser.breakpoint": "Remove Browser Breakpoint",
			"remove.browser.breakpoint.all": "Remove All Browser Breakpoints",
			"skipFiles.description": "Массив стандартных масок для файлов, пропускаемых при отладке. Маска \"<node_internals>/**\" соответствует всем внутренним модулям Node.js.",
			"smartStep.description": "Автоматическая пошаговая отработка сформированного кода, который невозможно снова добавить в исходный источник.",
			"start.with.stop.on.entry": "Запустить отладку и остановить ее при вводе",
			"toggle.skipping.this.file": "Отключить пропуск для этого файла",
			"trace.boolean.description": "Trace may be set to 'true' to write diagnostic logs to the disk.",
			"trace.console.description": "Configures whether logs are also returned to the debug console.",
			"trace.description": "Configures what diagnostic output is produced.",
			"trace.level.description": "Configures the level of logs recorded.",
			"trace.logFile.description": "Configures where on disk logs are written.",
			"trace.tags.description": "Configures what types of logs are recorded."
		}
	}
}