{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"extension.description": "Node.js debugging support (versions < 8.0)",
			"node.label": "Node.js",
			"open.loaded.script": "Betöltött parancsfájl megnyitása",
			"attach.node.process": "Csatlakozás egy Node.js-folyamathoz",
			"toggle.skipping.this.file": "Fájl kihagyásának be- és kikapcsolása",
			"start.with.stop.on.entry": "Hibakeresés elindítása és megállás a belépési ponton",
			"smartStep.description": "Olyan generált kódok automatikus átugrása, amelyeknek nem sikerül visszakövetni az eredeti forrását.",
			"skipFiles.description": "An array of glob patterns for files to skip when debugging. The pattern `<node_internals>/**` matches all internal Node.js modules.",
			"outFiles.description": "Ez a globális minta írja le a generált JavaScript-fájlok elérési útjait, ha a forráskódtérképek engedélyezve vannak. Ha a minta `!`-lel kezdődik, az arra a mintára illeszkedő fájlok ki lesznek zárva. Ha nincs megadva, a rendszer elvárja, hogy a generált kód ugyanabban a mappában legyen, mint a forrása.",
			"outDir.deprecationMessage": "Az 'outDir' attribútum elavult, használja helyette az 'outFiles'-t!",
			"trace.description": "Diagnosztikai kimenet generálása. Az érték true-ra való állítása helyett fel lehet sorolni egy vagy több szelektort, vesszővel elválasztva. A 'verbose' szelektor nagyon részletes kimenetet eredményez.",
			"launch.args.description": "A program számára átadott parancssori argumentumok.",
			"node.protocol.description": "A használt Node.js hibakeresési protokoll.",
			"node.protocol.auto.description": "Automatikusan próbálja megtalálni a legjobb protokollt, Node 8.0+ alatt az 'inspector' választásával",
			"node.protocol.inspector.description": "New protocol supported by Node.js versions >= 6.3",
			"node.protocol.legacy.description": "Old protocol supported by Node.js versions < 8.0",
			"node.sourceMaps.description": "JavaScript-forráskódtérképek használata (ha léteznek).",
			"node.stopOnEntry.description": "Program automatikus leállítása indítás után.",
			"node.port.description": "A hibakeresőhöz való csatlakozáshoz használt port. Alapértelmezett értéke 5858.",
			"node.address.description": "TCP/IP address of process to be debugged (for Node.js >= 5.0 only). Default is 'localhost'.",
			"node.timeout.description": "Meghatározza, hány ezredmásodpercig próbál kapcsolódni a Node.js-hez. Alapértelmezett értéke 10000 ms.",
			"node.restart.description": "Munkafolyamat újraindítása, ha a Node.js futása befejeződött.",
			"node.localRoot.description": "A programot tartalmazó helyi könyvtár elérési útja.",
			"node.remoteRoot.description": "A programot tartalmazó távoli könyvtár abszolút elérési útja. ",
			"node.showAsyncStacks.description": "Az aktuális hívási veremhez vezető aszinkron hívások megjelenítése. Csak 'inspector' protokoll esetén.",
			"node.sourceMapPathOverrides.description": "Szabályok, amelyek a forráskódtérképekben található forrásfájlokban leírt elérési utak lemezen lévő elérési útra való leképezésére szolgálnak.",
			"node.disableOptimisticBPs.description": "Ne állítson be töréspontot egyetlen olyan fájlban sem, amely forráskódtérképe még nem töltődött be.",
			"node.launch.program.description": "A program abszolút elérési útja. Az érték a package.json és a megnyitott fájlok alapján lett generálva. Szerkessze ezt az attribútumot!",
			"node.launch.externalConsole.deprecationMessage": "Az 'externalConsole' attribútum elavult, használja helyette az 'console'-t!",
			"node.launch.console.description": "Hol induljon el a hibakeresési célpont.",
			"node.launch.console.internalConsole.description": "A VS Code hibakeresési konzoljábal (ami nem támogatja a programtól származó bemenet olvasását)",
			"node.launch.console.integratedTerminal.description": "A VS Code integrált termináljában",
			"node.launch.console.externalTerminal.description": "Külső terminál, ami felhasználói beállításokkal konfigurálható",
			"node.launch.cwd.description": "A program munkakönyvtárának abszolút elérési útja hibakeresésnél.",
			"node.launch.runtimeExecutable.description": "A használt futtatókörnyezet. Vagy egy abszolút elérési út vagy olyan futtatókörnyezet, amely elérhető a PATH-ban. Ha nincs megadva, akkor `node` van használva.",
			"node.launch.runtimeArgs.description": "A futtatókörnyezet számára átadott kiegészítő argumentumok.",
			"node.launch.runtimeVersion.description": "A használt `node` futtatókörnyezet verziója. `nvm`-et igényel.",
			"node.launch.env.description": "A kiegészítő gazdafolyamata számára átadott környezeti változók. A `null` eltávolítja az adott környezeti változó értékét.",
			"node.launch.envFile.description": "A környezetiváltozó-definíciókat tartalmazó fájl abszolút elérési útja.",
			"node.launch.useWSL.description": "Windows Subsystem for Linux használata.",
			"node.launch.outputCapture.description": "Honnan legyenek rögzítve a kimeneti üzenetek: a hibakeresési API-ról vagy stdout/stderr streamekről.",
			"node.launch.autoAttachChildProcesses.description": "Hibakereső automatikus csatolása az új gyerekfolyamatokhoz.",
			"node.launch.config.name": "Indítás",
			"node.attach.processId.description": "Annak a folyamatnak az azonosítója, amelyhez csatlakozás történik.",
			"node.attach.config.name": "Csatlakozás",
			"node.processattach.config.name": "Csatlakozás egy folyamathoz",
			"node.snippet.launch.label": "Node.js: Program indítása",
			"node.snippet.launch.description": "Program indítása hibakeresési módban",
			"node.snippet.npm.label": "Node.js: Indítás NPM-mel",
			"node.snippet.npm.description": "Node-program indítása az npm `debug` parancson keresztül",
			"node.snippet.attach.label": "Node.js: Csatlakozás",
			"node.snippet.attach.description": "Csatlakozás egy futó Node-programhoz",
			"node.snippet.remoteattach.label": "Node.js: Csatlakozás távoli programhoz",
			"node.snippet.remoteattach.description": "Csatlakozás egy távol futó Node-program hibakeresési portjához ",
			"node.snippet.attachProcess.label": "Node.js: Csatlakozás egy folyamathoz",
			"node.snippet.attachProcess.description": "Folyamatválasztó megnyitása a csatolandó node-folyamat kiválasztásához",
			"node.snippet.nodemon.label": "Node.js: Nodemon beállítása",
			"node.snippet.nodemon.description": "Nodemon használata a hibakeresési folyamat újraindításához a forráskód változása esetén",
			"node.snippet.mocha.label": "Node.js: Mocha-tesztek",
			"node.snippet.mocha.description": "Mocha-teszek hibakeresése",
			"node.snippet.yo.label": "Node.js: Yeoman-generátor",
			"node.snippet.yo.description": "Yeoman-generátor hibakeresése (telepíthető az `npm link` futtatásával a projekt mappájában)",
			"node.snippet.gulp.label": "Node.js: Gulp-feladat",
			"node.snippet.gulp.description": "Gulp-feladat hibakeresése (győződjön meg róla, hogy a helyi gulp telepítve van a projekthez)",
			"node.snippet.electron.label": "Node.js: Electron Main",
			"node.snippet.electron.description": "Az Electron főfolyamatának hibakeresése"
		}
	}
}