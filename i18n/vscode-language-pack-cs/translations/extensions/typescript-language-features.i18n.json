{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Funkce jazyka TypeScript a JavaScript",
			"description": "Poskytuje rozšířenou podporu jazyka pro JavaScript a TypeScript.",
			"reloadProjects.title": "Znovu načíst projekt",
			"configuration.typescript": "TypeScript",
			"configuration.suggest.completeFunctionCalls": "Dokončovat funkce pomocí jejich podpisu parametru",
			"configuration.suggest.includeAutomaticOptionalChainCompletions": "Umožňuje povolit/zakázat zobrazení dokončení pro potenciálně nedefinované hodnoty, které vkládají volitelné volání řetězce. Vyžaduje TS 3.7+ a povolení striktních kontrol hodnot null.",
			"typescript.tsdk.desc": "Určuje cestu ke složce pro soubory tsserver a lib*.d.ts v rámci instalace TypeScriptu, která se má používat pro technologii IntelliSense, například: ./node_modules/typescript/lib.\r\n\r\n\n- Pokud je zadáno jako uživatelské nastavení, verze TypeScriptu ze souboru typescript.tsdk automaticky nahradí integrovanou verzi TypeScriptu.\r\n- Pokud je zadáno jako nastavení pracovního prostoru, umožňuje vám soubor typescript.tsdk přepnout na používání verze TypeScriptu tohoto pracovního prostoru pro IntelliSense příkazem TypeScript: vybrat verzi TypeScriptu.r\r\r\nDalší informacee o správně verzí TypeScript najdete v [dokumentaci k TypeScriptu](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions).",
			"typescript.disableAutomaticTypeAcquisition": "Zakáže automatické získávání typu. Automatické získávání typu načítá balíčky @types z npm za účelem vylepšování technologie IntelliSense pro externí knihovny.",
			"typescript.enablePromptUseWorkspaceTsdk": "Umožňuje dotazovat se uživatelů na použití verze TypeScript nakonfigurované v pracovním prostoru pro Intellisense.",
			"typescript.tsserver.log": "Umožňuje povolit protokolování serveru TS do souboru. Tento protokol lze použít k diagnostikování problémů se serverem TS. Protokol může obsahovat cesty k souborům, zdrojový kód a další potenciálně citlivé informace z vašeho projektu.",
			"typescript.tsserver.pluginPaths": "Další cesty ke zjišťování modulů plug-in služby jazyka TypeScript",
			"typescript.tsserver.pluginPaths.item": "Buď absolutní, nebo relativní cesta. Relativní cesta bude bude relativní ve vztahu ke složkám pracovního prostoru.",
			"typescript.tsserver.trace": "Umožňuje povolit trasování zpráv odesílaných na server TS. Toto trasování lze použít k diagnostikování problémů se serverem TS. Trasování může obsahovat cesty k souborům, zdrojový kód a další potenciálně citlivé informace z vašeho projektu.",
			"typescript.validate.enable": "Povolit/zakázat ověření TypeScriptu",
			"typescript.format.enable": "Umožňuje povolit/zakázat výchozí formátovací modul TypeScriptu.",
			"javascript.format.enable": "Umožňuje povolit/zakázat výchozí formátovací modul JavaScriptu.",
			"format.insertSpaceAfterCommaDelimiter": "Určuje, jak zpracovat mezery za oddělovačem v podobě čárky.",
			"format.insertSpaceAfterConstructor": "Určuje, jak zpracovat mezery za klíčovým slovek konstruktoru.",
			"format.insertSpaceAfterSemicolonInForStatements": "Určuje, jak zpracovat mezery po středníku v příkazu for.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Určuje, jak zpracovat mezery po binárním operátoru.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Určuje, jak zpracovat mezery po klíčových slovech v příkazu řídicího toku.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Určuje, jak zpracovat mezery po klíčovém slově funkce pro anonymní funkce.",
			"format.insertSpaceBeforeFunctionParenthesis": "Určuje, jak zpracovat mezery před okrouhlými závorkami argumentů funkcí.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Určuje, jak zpracovat mezery po levé okrouhlé závorce a před pravou okrouhlou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Určuje, jak zpracovat mezery po levé hranaté závorce a před pravou hranatou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Určuje, jak zpracovat mezery po levé složené závorce a před pravou složenou závorkou, pokud tyto závorky nejsou prázdné.",
			"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Určuje, jak zpracovat mezery po levé složené závorce a před pravou složenou závorkou řetězce šablony.",
			"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Určuje, jak zpracovat mezery po levé složené závorce a před pravou složenou závorkou výrazu JSX.",
			"format.insertSpaceAfterTypeAssertion": "Určuje, jak zpracovat mezery po kontrolních výrazech v TypeScriptu.",
			"format.placeOpenBraceOnNewLineForFunctions": "Určuje, jestli je levá složená závorka umístěna na nový řádek ve funkcích.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Určuje, jestli je levá složená závorka umístěna na nový řádek v řídicích blocích.",
			"format.semicolons": "Definuje zpracování volitelných středníků. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.7 nebo novější.",
			"format.semicolons.ignore": "Nevkládat ani neodebírat žádné středníky",
			"format.semicolons.insert": "Vkládat středníky na konec příkazů",
			"format.semicolons.remove": "Odebrat nepotřebné středníky",
			"javascript.validate.enable": "Umožňuje povolit/zakázat ověřová JavaScriptu.",
			"goToProjectConfig.title": "Přejít na konfiguraci projektu",
			"javascript.referencesCodeLens.enabled": "Umožňuje povolit/zakázat odkazy CodeLens v souborech JavaScriptu.",
			"javascript.referencesCodeLens.showOnAllFunctions": "Umožňuje povolit/zakázat odkazy CodeLens pro všechny funkce v souborech JavaScriptu.",
			"typescript.referencesCodeLens.enabled": "Umožňuje povolit/zakázat odkazy CodeLens v souborech TypeScriptu.",
			"typescript.referencesCodeLens.showOnAllFunctions": "Umožňuje povolit/zakázat odkazy CodeLens pro všechny funkce v souborech TypeScriptu.",
			"typescript.implementationsCodeLens.enabled": "Umožňuje povolit/zakázat implementace CodeLens. Tento funkce CodeLens zobrazí implementátory rozhraní.",
			"typescript.openTsServerLog.title": "Otevřít protokol serveru TS",
			"typescript.restartTsServer": "Restartovat server TS",
			"typescript.selectTypeScriptVersion.title": "Vybrat verzi TypeScriptu...",
			"typescript.reportStyleChecksAsWarnings": "Hlásit kontroly stylu jako upozornění",
			"javascript.implicitProjectConfig.checkJs": "Umožňuje povolit/zakázat sémantickou kontrolu souborů JavaScriptu. Existující soubory jsconfig.json nebo tsconfig.json toto nastavení přepíší.",
			"typescript.npm": "Určuje cestu ke spustitelnému souboru npm používanému pro automatické získání typu.",
			"typescript.check.npmIsInstalled": "Umožňuje zkontrolovat, jestli je nainstalovaný správce npm pro automatické získání typu.",
			"configuration.suggest.names": "Umožňuje povolit/zakázat zahrnutí jedinečných názvů ze souboru do návrhů JavaScriptu. Poznámka: Návrhy názvů jsou vždy zakázány v kódu JavaScriptu, který je sémanticky kontrolován pomocí @ts-check nebo checkJs.",
			"typescript.tsc.autoDetect": "Řídí automatické zjišťování úloh tsc.",
			"typescript.tsc.autoDetect.off": "Zakázat tuto funkci",
			"typescript.tsc.autoDetect.on": "Vytvořit úkoly sestavení i sledování",
			"typescript.tsc.autoDetect.build": "Umožňuje vytvářet úlohy kompilace pouze pro jedno spuštění.",
			"typescript.tsc.autoDetect.watch": "Vytvořit pouze úlohy kompilace a sledování",
			"typescript.problemMatchers.tsc.label": "Problémy s TypeScriptem",
			"typescript.problemMatchers.tscWatch.label": "Problémy s TypeScriptem (režim sledování)",
			"configuration.suggest.paths": "Umožňuje povolit/zakázat návrhy pro cesty v příkazech importu a vyžadovat volání.",
			"configuration.tsserver.useSeparateSyntaxServer": "Umožňuje povolit nebo zakázat vytváření samostatného serveru TypeScriptu, který může rychleji reagovat na operace související s syntaxí, jako je například výpočet sbalení nebo symbolů dokumentu. V pracovním prostoru je nutné používat TypeScript 3.4.0 nebo novější.",
			"configuration.tsserver.maxTsServerMemory": "Nastavit maximální velikost paměti (v MB), která se přidělí procesu serveru TypeScriptu",
			"configuration.tsserver.experimental.enableProjectDiagnostics": "(Experimentální) Povolí zasílání zpráv o chybách v rámci celého projektu.",
			"typescript.locale": "Nastaví národní prostředí použité k hlášení chyb JavaScriptu a TypeScriptu. Výchozí hodnota null znamená používá národního prostředí VS Code.",
			"javascript.implicitProjectConfig.experimentalDecorators": "Povolí/zakáže parametr experimentalDecorators pro soubory JavaScriptu, které nejsou součástí projektu. Toto nastavení přepisují existující soubory jsconfig.json nebo tsconfig.json.",
			"configuration.suggest.autoImports": "Povolí/zakáže návrhy automatického importu.",
			"taskDefinition.tsconfig.description": "Soubor tsconfig, který definuje sestavení TS",
			"javascript.suggestionActions.enabled": "Umožňuje povolit/zakázat diagnostiku návrhů pro soubory JavaScriptu v editoru.",
			"typescript.suggestionActions.enabled": "Umožňuje povolit/zakázat diagnostiku návrhů pro soubory TypeScriptu v editoru.",
			"typescript.preferences.quoteStyle": "Upřednostňovaný styl uvozovek pro rychlé opravy. Lze použít jednu z těchto hodnot: single (jednoduché uvozovky), double (dvojité uvozovky) a auto (použijte se typ uvozovek z existujících importů).",
			"typescript.preferences.importModuleSpecifier": "Upřednostňovaný styl cesty pro automatické importy",
			"typescript.preferences.importModuleSpecifier.auto": "Automaticky vybrat styl cesty importu. Upřednostňuje použití relativního importu, pokud je nakonfigurováno nastavení baseUrl a relativní cesta má méně segmentů než nerelativní import.",
			"typescript.preferences.importModuleSpecifier.relative": "Relativní vzhledem k umístění souboru",
			"typescript.preferences.importModuleSpecifier.nonRelative": "Vychází z nastavení baseUrl nakonfigurovaného v souboru jsconfig.json/tsconfig.json.",
			"typescript.preferences.importModuleSpecifierEnding": "Upřednostňované zakončení cesty pro automatické importy",
			"typescript.preferences.importModuleSpecifierEnding.auto": "Výchozí nastavení vyberte pomocí nastavení projektu.",
			"typescript.preferences.importModuleSpecifierEnding.minimal": "Zkraťte ./component/index.js na ./component.",
			"typescript.preferences.importModuleSpecifierEnding.index": "Zkraťte ./component/index.js na ./component/index.",
			"typescript.preferences.importModuleSpecifierEnding.js": "Nezkracujte konce cest. Zahrňte příponu .js.",
			"typescript.preferences.includePackageJsonAutoImports": "Umožňuje povolit/zakázat hledání závislostí package.json pro dostupné automatické importy.",
			"typescript.preferences.includePackageJsonAutoImports.auto": "Hledat závislosti na základě odhadovaného dopadu na výkon",
			"typescript.preferences.includePackageJsonAutoImports.on": "Vždy hledat závislosti",
			"typescript.preferences.includePackageJsonAutoImports.off": "Nikdy nehledat závislosti",
			"typescript.updateImportsOnFileMove.enabled": "Umožňuje povolit/zakázat automatické aktualizace cest importu při přejmenovávání nebo přesouvání souboru ve VS Code.",
			"typescript.updateImportsOnFileMove.enabled.prompt": "Dotázat se na každé přejmenování",
			"typescript.updateImportsOnFileMove.enabled.always": "Vždy automaticky aktualizovat cesty",
			"typescript.updateImportsOnFileMove.enabled.never": "Nikdy nepřejmenovávat cesty a nezobrazovat dotaz",
			"typescript.autoClosingTags": "Umožňuje povolit/zakázat automatické zavírání značek JSX.",
			"typescript.suggest.enabled": "Umožňuje povolit/zakázat návrhy automatického dokončování.",
			"configuration.surveys.enabled": "Umožňuje povolit/zakázat příležitostné průzkumy, které nám pomůžou vylepšit podporu JavaScriptu a TypeScriptu ve VS Code.",
			"configuration.suggest.completeJSDocs": "Umožňuje povolit/zakázat návrh na dokončování komentářů JSDoc.",
			"configuration.tsserver.watchOptions": "Umožňuje nakonfigurovat, které strategie sledování se mají používat pro sledování souborů a adresářů. Vyžaduje použití TypeScriptu 3.8 + v pracovním prostoru.",
			"configuration.tsserver.watchOptions.watchFile": "Strategie pro sledovaní jednotlivých souborů",
			"configuration.tsserver.watchOptions.watchFile.fixedPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu v pevném intervalu",
			"configuration.tsserver.watchOptions.watchFile.priorityPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu, ale pomocí heuristiky kontrolovat konkrétní typy souborů méně často",
			"configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling": "Použijte dynamickou frontu, ve které se budou méně často upravované soubory kontrolovat méně často.",
			"configuration.tsserver.watchOptions.watchFile.useFsEvents": "Pokus o použití nativních událostí operačního systému / systému souborů pro změny v souboru",
			"configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory": "Pokus o použití nativních událostí operačního systému / systému souborů k naslouchání změnám v adresářích obsahujících daný soubor. Může to vést k používání menšího počtu sledovacích procesů souborů, ale zároveň ke snížení přesnosti.",
			"configuration.tsserver.watchOptions.watchDirectory": "Strategie pro sledování všech adresářových stromů v systémech, kde neexistuje žádná funkce rekurzivního sledování souborů",
			"configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval": "Zkontrolovat změny v každém adresáři několikrát za sekundu v pevném intervalu",
			"configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling": "Použijte dynamickou frontu, ve které se budou méně často upravované adresáře kontrolovat méně často.",
			"configuration.tsserver.watchOptions.watchDirectory.useFsEvents": "Pokus o použití nativních událostí operačního systému / systému souborů pro změny v adresáři",
			"configuration.tsserver.watchOptions.fallbackPolling": "Při použití událostí systému souborů tato možnost určuje strategii dotazování, která se má použít, když v systému dojdou prostředky nativního sledování souborů nebo pokud nativní sledování souborů nepodporuje.",
			"configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu v pevném intervalu",
			"configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval": "Kontrolovat změny v každém souboru několikrát za sekundu, ale pomocí heuristiky kontrolovat konkrétní typy souborů méně často",
			"configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ": "Použijte dynamickou frontu, ve které se budou méně často upravované soubory kontrolovat méně často.",
			"configuration.tsserver.watchOptions.synchronousWatchDirectory": "Umožňuje zakázat odložené sledování adresářů. Odložené sledování je užitečné, když může v souboru najednou dojít k velkému počtu změn (např. změna v node_modules spuštěné instalace npm). U některých méně obvyklých instalací ho ale můžete chtít pomocí tohoto příznaku zakázat.",
			"typescript.preferences.renameShorthandProperties.deprecationMessage": "Nastavení typescript.preferences.renameShorthandProperties je zastaralé. Místo něj se používá nastavení typescript.preferences.useAliasesForRenames.",
			"typescript.preferences.useAliasesForRenames": "Umožňuje povolit/zakázat zavádění aliasů pro společné vlastnosti objektů při přejmenovávání. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.4 nebo novější.",
			"typescript.workspaceSymbols.scope": "Určuje, které soubory jsou prohledávány pomocí funkce [přejít na symbol v pracovním prostoru] (https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
			"typescript.workspaceSymbols.scope.allOpenProjects": "Hledat symboly ve všech otevřených projektech JavaScriptu nebo TypeScriptu. Vyžaduje, aby se v pracovním prostoru používal TypeScript 3.9 nebo novější.",
			"typescript.workspaceSymbols.scope.currentProject": "Hledat symboly pouze v aktuálním projektu JavaScriptu nebo TypeScriptu",
			"codeActions.refactor.extract.constant.title": "Extrahovat konstantu",
			"codeActions.refactor.extract.constant.description": "Extrahovat výraz do konstanty",
			"codeActions.refactor.extract.function.title": "Extrahovat funkci",
			"codeActions.refactor.extract.function.description": "Extrahovat výraz do metody nebo funkce",
			"codeActions.refactor.extract.type.title": "Extrahovat typ",
			"codeActions.refactor.extract.type.description": "Extrahovat typ do aliasu typu",
			"codeActions.refactor.extract.interface.title": "Extrahovat rozhraní",
			"codeActions.refactor.extract.interface.description": "Extrahovat typ do rozhraní",
			"codeActions.refactor.rewrite.import.title": "Převést import",
			"codeActions.refactor.rewrite.import.description": "Převod mezi pojmenovanými importy a importy názvového prostoru",
			"codeActions.refactor.rewrite.export.title": "Převést export",
			"codeActions.refactor.rewrite.export.description": "Převod mezi výchozím exportem a pojmenovaným exportem",
			"codeActions.refactor.move.newFile.title": "Přesunout do nového souboru",
			"codeActions.refactor.move.newFile.description": "Přesunout výraz do nového souboru",
			"codeActions.refactor.rewrite.arrow.braces.title": "Přepsat úhlové závorky",
			"codeActions.refactor.rewrite.arrow.braces.description": "Přidat nebo odebrat složené závorky ve funkci šipky",
			"codeActions.refactor.rewrite.parameters.toDestructured.title": "Převést parametry na destrukturovaný objekt",
			"codeActions.refactor.rewrite.property.generateAccessors.title": "Generovat přístupové objekty",
			"codeActions.refactor.rewrite.property.generateAccessors.description": "Generovat přístupové objekty get a set",
			"codeActions.source.organizeImports.title": "Uspořádat importy"
		},
		"dist/utils/api": {
			"invalidVersion": "neplatná verze"
		},
		"dist/utils/tsconfig": {
			"typescript.configureTsconfigQuickPick": "Konfigurovat tsconfig.js",
			"typescript.configureJsconfigQuickPick": "Konfigurovat jsconfig.js",
			"typescript.noTypeScriptProjectConfig": "Soubor není součástí projektu TypeScriptu. Další informace získáte kliknutím [sem]({0}).",
			"typescript.noJavaScriptProjectConfig": "Soubor není součástí projektu JavaScriptu. Další informace získáte kliknutím [sem]({0}).",
			"typescript.projectConfigNoWorkspace": "Pokud chcete použít projekt TypeScriptu nebo JavaScriptu, otevřete prosím složku ve VS Code.",
			"typescript.projectConfigUnsupportedFile": "Nepovedlo se určit projekt TypeScriptu nebo JavaScriptu. Nepodporovaný typ souboru",
			"typescript.projectConfigCouldNotGetInfo": "Nepovedlo se určit projekt TypeScriptu nebo JavaScriptu."
		},
		"dist/languageFeatures/codeLens/baseCodeLensProvider": {
			"referenceErrorLabel": "Nepovedlo se určit odkazy."
		},
		"dist/languageFeatures/completions": {
			"selectCodeAction": "Vybrat akci kódu, která se má použít",
			"acquiringTypingsLabel": "Získávají se definice typings...",
			"acquiringTypingsDetail": "Získávají se definice typings pro IntelliSense.",
			"autoImportLabel": "Automaticky importovat z: {0}"
		},
		"dist/languageFeatures/directiveCommentCompletions": {
			"ts-check": "Povolí sémantickou kontrolu v souboru JavaScriptu. Musí být na začátku souboru.",
			"ts-nocheck": "Zakáže sémantickou kontrolu v souboru JavaScriptu. Musí být na začátku souboru.",
			"ts-ignore": "Potlačí chyby @ts-check na dalším řádku souboru.",
			"ts-expect-error": "Potlačí chyby @ts-check na dalším řádku souboru. Očekává, že bude existovat minimálně jedna."
		},
		"dist/languageFeatures/codeLens/implementationsCodeLens": {
			"oneImplementationLabel": "1 implementace",
			"manyImplementationLabel": "Počet implementací: {0}"
		},
		"dist/languageFeatures/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "Komentář JSDoc"
		},
		"dist/languageFeatures/organizeImports": {
			"organizeImportsAction.title": "Uspořádat importy"
		},
		"dist/languageFeatures/quickFix": {
			"fixAllInFileLabel": "{0} (Opravit vše v souboru)"
		},
		"dist/languageFeatures/fixAll": {
			"autoFix.label": "Opravit vše",
			"autoFix.unused.label": "Odebrat veškerý nepoužívaný kód",
			"autoFix.missingImports.label": "Přidat všechny chybějící importy"
		},
		"dist/languageFeatures/refactor": {
			"refactoringFailed": "Refaktorování se nepodařilo použít.",
			"extractConstant.disabled.title": "Extrahovat do konstanty",
			"extractConstant.disabled.reason": "Aktuální výběr nelze extrahovat.",
			"extractFunction.disabled.title": "Extrahovat do funkce",
			"extractFunction.disabled.reason": "Aktuální výběr nelze extrahovat.",
			"refactor.documentation.title": "Další informace o refaktorování JS/TS"
		},
		"dist/languageFeatures/codeLens/referencesCodeLens": {
			"oneReferenceLabel": "1 odkaz",
			"manyReferenceLabel": "Odkazy: {0}"
		},
		"dist/languageFeatures/rename": {
			"fileRenameFail": "Při přejmenovávání souboru došlo k chybě."
		},
		"dist/tsServer/versionStatus": {
			"projectQuickPick.placeholder": "Informace o projektu v TypeScriptu",
			"projectQuickPick.version.label": "Vybrat verzi TypeScriptu...",
			"projectQuickPick.project.create": "Vytvořit tsconfig",
			"projectQuickPick.project.create.description": "Tento soubor není aktuálně součástí projektu tsconfig/jsconfig.",
			"projectQuickPick.version.goProjectConfig": "Otevřít tsconfig",
			"projectQuickPick.help": "Nápověda k TypeScriptu",
			"projectInfo.name": "TypeScript: informace o projektu"
		},
		"dist/typescriptServiceClient": {
			"noServerFound": "Cesta {0} neodkazuje na platnou instalaci serveru tsserver. Místo toho se použije verze TypeScriptu v balíčku.",
			"serverExitedWithError": "Server jazyka TypeScript byl ukončen s chybou. Chybová zpráva: {0}",
			"typescript.openTsServerLog.loggingNotEnabled": "Protokolování serveru TS je vypnuté. Pokud chcete povolit protokolování, nastavte prosím typescript.tsserver.log a restartujte sderver TS.",
			"typescript.openTsServerLog.enableAndReloadOption": "Povolit protokolování a restartovat server TS",
			"typescript.openTsServerLog.noLogFile": "Server TS nezačal protokolovat.",
			"openTsServerLog.openFileFailedFailed": "Nepovedlo se otevřít soubor protokolu serveru TS.",
			"serverDiedReportIssue": "Nahlásit problém",
			"serverDiedAfterStart": "Služba jazyka TypeScript se ihned po spuštění pětkrát ukončila. Služba nebude restartována.",
			"serverDied": "Služba jazyka TypeScript se za posledních 5 minut pětkrát za sebou neočekávaně ukončila.",
			"serverDiedOnce": "Služba jazyka TypeScript byla neočekávaně ukončena.",
			"serverLoading.progress": "Inicializují se funkce jazyka JS/TS"
		},
		"dist/tsServer/versionManager": {
			"selectTsVersion": "Vyberte verzi TypeScriptu používanou pro funkce jazyka JavaScript a TypeScript.",
			"useVSCodeVersionOption": "Použít verzi VS Code",
			"useWorkspaceVersionOption": "Použít verzi pracovního prostoru",
			"allow": "Povolit",
			"dismiss": "Zavřít",
			"suppress prompt": "Nikdy v tomto pracovním prostoru",
			"promptUseWorkspaceTsdk": "Tento pracovní prostor obsahuje verzi TypeScriptu. Chcete použít verzi TypeScriptu pracovního prostoru pro funkce jazyka TypeScript a JavaScript?",
			"learnMore": "Další informace o správě verzí TypeScriptu"
		},
		"dist/utils/logger": {
			"channelName": "TypeScript"
		},
		"dist/utils/typingsStatus": {
			"installingPackages": "Načítají se data pro zvýšení efektivity IntelliSense pro TypeScript.",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Znovu nezobrazovat",
			"typesInstallerInitializationFailed.title": "Nepovedlo se nainstalovat soubory psaní pro funkce jazyka JavaScript. Ujistěte se prosím, že je nainstalovaný správce balíčků NPM, nebo v nastaveních uživatele nakonfigurujte typescript.npm. Další informace získáte kliknutím [sem]({0})."
		},
		"dist/utils/largeProjectStatus": {
			"statusExclude": "TypeScript: konfigurovat vyloučení",
			"hintExclude": "Pokud chcete povolit funkce jazyka JavaScript/TypeScript pro celý projekt, vylučte složky s velkým počtem souborů, například: {0}.",
			"hintExclude.generic": "Pokud chcete povolit funkce jazyka JavaScript/TypeScript pro celý projekt, vylučte velké složky se zdrojovými soubory, na kterých nepracujete.",
			"large.label": "Konfigurovat vyloučení",
			"hintExclude.tooltip": "Pokud chcete povolit funkce jazyka JavaScript/TypeScript pro celý projekt, vylučte velké složky se zdrojovými soubory, na kterých nepracujete."
		},
		"dist/languageFeatures/updatePathsOnRename": {
			"renameProgress.title": "Kontroluje se aktualizace importů JS/TS",
			"prompt": "Chcete aktualizovat importy pro: {0}?",
			"promptMoreThanOne": "Chcete aktualizovat importy pro následující soubory ({0})?",
			"reject.title": "Ne",
			"accept.title": "Ano",
			"always.title": "Vždy automaticky aktualizovat importy",
			"never.title": "Nikdy automaticky neaktualizovat importy",
			"moreFile": "...nezobrazuje se 1 další soubor",
			"moreFiles": "...{0} dalších souborů není zobrazeno"
		},
		"dist/tsServer/serverProcess.electron": {
			"noServerFound": "Cesta {0} neodkazuje na platnou instalaci serveru tsserver. Místo toho se použije verze TypeScriptu v balíčku."
		},
		"dist/task/taskProvider": {
			"badTsConfig": "Úloha TypeScriptu v souboru tasks.json obsahuje čtyři zpětná lomítka (\\\\). V konfiguraci tsconfig úloh TypeScriptu se musí používat jedno dopředné lomítko (/).",
			"buildTscLabel": "sestavení – {0}",
			"buildAndWatchTscLabel": "kukátko – {0}"
		}
	}
}