{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "GIT",
			"description": "Integrazione SCM su Git",
			"command.clone": "Clona",
			"command.init": "Inizializza repository",
			"command.openRepository": "Apri repository",
			"command.close": "Chiudi repository",
			"command.refresh": "Aggiorna",
			"command.openChange": "Apri modifiche",
			"command.openFile": "Apri file",
			"command.openHEADFile": "Apri File (HEAD)",
			"command.stage": "Prepara modifiche per commit",
			"command.stageAll": "Prepara tutte le modifiche per commit",
			"command.stageSelectedRanges": "Prepara per il commit intervalli selezionati",
			"command.revertSelectedRanges": "Ripristina intervalli selezionati",
			"command.stageChange": "Prepara modifica per commit",
			"command.revertChange": "Annulla modifica",
			"command.unstage": "Annulla preparazione modifiche per commit",
			"command.unstageAll": "Annulla preparazione di tutte le modifiche per commit",
			"command.unstageSelectedRanges": "Annulla preparazione per il commit di intervalli selezionati",
			"command.clean": "Rimuovi modifiche",
			"command.cleanAll": "Rimuovi tutte le modifiche",
			"command.commit": "Commit",
			"command.commitStaged": "Esegui commit dei file preparati",
			"command.commitEmpty": "Commit vuoto",
			"command.commitStagedSigned": "Esegui commit dei file preparati (approvazione)",
			"command.commitStagedAmend": "Esegui commit dei file preparati (modifica)",
			"command.commitAll": "Esegui commit di tutto",
			"command.commitAllSigned": "Esegui commit di tutto (approvazione)",
			"command.commitAllAmend": "Esegui commit di tutto (modifica)",
			"command.restoreCommitTemplate": "Ripristina il modello di Commit",
			"command.undoCommit": "Annulla ultimo commit",
			"command.checkout": "Estrai in...",
			"command.branch": "Crea ramo...",
			"command.branchFrom": "Crea ramo da...",
			"command.deleteBranch": "Elimina ramo...",
			"command.renameBranch": "Rinomina Branch...",
			"command.merge": "Merge ramo...",
			"command.createTag": "Crea tag",
			"command.fetch": "Fetch",
			"command.fetchPrune": "Recupera (elimina)",
			"command.fetchAll": "Recupera da tutti gli elementi remoti",
			"command.pull": "Esegui pull",
			"command.pullRebase": "Esegui pull (Riassegna)",
			"command.pullFrom": "Pull da...",
			"command.push": "Esegui push",
			"command.pushForce": "Push (Forzato)",
			"command.pushTo": "Esegui push in...",
			"command.pushToForce": "Push a... (Forzato)",
			"command.pushFollowTags": "Esegui push (segui tag)",
			"command.pushFollowTagsForce": "Esegui push (segui tag, forzato)",
			"command.addRemote": "Aggiungi repository remoto",
			"command.removeRemote": "Rimuovi repository remoto",
			"command.sync": "Sincronizza",
			"command.syncRebase": "Sincronizza (Rebase)",
			"command.publish": "Pubblica ramo",
			"command.showOutput": "Mostra output GIT",
			"command.ignore": "Aggiungi file a .gitignore",
			"command.stashIncludeUntracked": "Stash (includi non tracciate)",
			"command.stash": "Accantona",
			"command.stashPop": "Preleva accantonamento...",
			"command.stashPopLatest": "Preleva accantonamento più recente",
			"command.stashApply": "Applica Stash...",
			"command.stashApplyLatest": "Applica ultimo Stash",
			"config.enabled": "Indica se GIT è abilitato.",
			"config.path": "Percorso e nome file dell'eseguibile GIT, ad esempio `C:\\Programmi\\Git\\bin\\git.exe` (Windows).",
			"config.autoRepositoryDetection": "Configura quando il repository dovrebbe essere rilevato automaticamente.",
			"config.autoRepositoryDetection.true": "Esegue la scansione per individuare le sottocartelle della cartella attualmente aperta e le cartelle padre dei file aperti.",
			"config.autoRepositoryDetection.false": "Disabilita la scansione automatica del repository.",
			"config.autoRepositoryDetection.subFolders": "Esegue la scansione per individuare le sottocartelle della cartella attualmente aperta.",
			"config.autoRepositoryDetection.openEditors": "Esegue la scansione per individuare le cartelle padre dei file aperti.",
			"config.autorefresh": "Indica se l'aggiornamento automatico è abilitato.",
			"config.autofetch": "Quando è abilitata, i commit verranno recuperati automaticamente dal ramo remoto del repository GIT corrente.",
			"config.autofetchPeriod": "Durata in secondi tra ogni git fetch automatico, quando è abilitata l'opzione `git.autofetch`.",
			"config.confirmSync": "Confermare prima di sincronizzare i repository GIT.",
			"config.countBadge": "Controlla il contatore dei log GIT.",
			"config.countBadge.all": "Esegue il conteggio di tutte le modifiche.",
			"config.countBadge.tracked": "Esegue il conteggio solo delle revisioni.",
			"config.countBadge.off": "Disattiva il contatore.",
			"config.checkoutType": "Controlla il tipo di rami elencati quando si esegue 'Estrai in...'.",
			"config.checkoutType.all": "Mostra tutti i riferimenti.",
			"config.checkoutType.local": "Mostra solo rami locali.",
			"config.checkoutType.tags": "Mostra solo tag.",
			"config.checkoutType.remote": "Mostra solo rami remoti.",
			"config.branchValidationRegex": "Un'espressione regolare per validare i nomi delle nuove branch.",
			"config.branchWhitespaceChar": "Il carattere per sostituire gli spazi vuoti nei nomi delle nuove branch.",
			"config.ignoreLegacyWarning": "Ignora l'avvertimento legacy di Git.",
			"config.ignoreMissingGitWarning": "Ignora il messaggio di avviso quando manca GIT.",
			"config.ignoreLimitWarning": "Ignora il messaggio di avviso quando ci sono troppe modifiche in un repository.",
			"config.defaultCloneDirectory": "Il percorso predefinito in cui clonare un repository GIT.",
			"config.enableSmartCommit": "Eseguire il commit di tutte le modifiche quando non ci sono modifiche preparate.",
			"config.smartCommitChanges": "Control which changes are automatically staged by Smart Commit.",
			"config.smartCommitChanges.all": "Automatically stage all changes.",
			"config.smartCommitChanges.tracked": "Automatically staged tracked changes only.",
			"config.suggestSmartCommit": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
			"config.enableCommitSigning": "Abilita la firma del commit con GPG.",
			"config.discardAllScope": "Controlla quali modifiche vengono rimosse tramite il comando `Rimuovi tutte le modifiche`. Con `all` vengono rimosse tutte le modifiche. Con `tracked` vengono rimossi solo i file di cui viene tenuta traccia. Con `prompt` viene visualizzata una finestra di dialogo ogni volta che si esegue l'azione.",
			"config.decorations.enabled": "Controlla se Git fornisce colori e notifiche nelle visualizzazioni Esplora risorse e Editor aperti.",
			"config.enableStatusBarSync": "Controls whether the Git Sync command appears in the status bar.",
			"config.promptToSaveFilesBeforeCommit": "Controlla se GIT deve verificare la presenza di file non salvati prima di eseguire il commit.",
			"config.promptToSaveFilesBeforeCommit.always": "Check for any unsaved files.",
			"config.promptToSaveFilesBeforeCommit.staged": "Verificare solo la presenza di file di stage non salvati.",
			"config.promptToSaveFilesBeforeCommit.never": "Disable this check.",
			"config.postCommitCommand": "Esegue un comando git dopo un'operazione commit riuscita.",
			"config.postCommitCommand.none": "Non eseguire alcun comando dopo un commit.",
			"config.postCommitCommand.push": "Esegue 'Git Push' dopo un commit riuscito.",
			"config.postCommitCommand.sync": "Esegue 'Git Sync' dopo un commit riuscito.",
			"config.showInlineOpenFileAction": "Controlla se visualizzare un'azione Apri file inline nella visualizzazione modifiche GIT.",
			"config.showPushSuccessNotification": "Controlla se visualizzare una notifica quando un push è avvenuto con successo.",
			"config.inputValidation": "Controlla quando visualizzare la convalida sull'input del messaggio di commit.",
			"config.inputValidationLength": "Controlla la soglia di lunghezza del messaggio di commit per mostrare un avviso.",
			"config.inputValidationSubjectLength": "Controlla la soglia relativa alla lunghezza dell'oggetto del messaggio di commit per la visualizzazione di un avviso. Disattivarlo per ereditare il valore di `config.inputValidationLength`.",
			"config.detectSubmodules": "Controlla se rilevare automaticamente i moduli secondari GIT.",
			"config.detectSubmodulesLimit": "Controlla il limite dei sottomoduli git rilevati.",
			"config.alwaysShowStagedChangesResourceGroup": "Mostra sempre il gruppo di risorse Modifiche preparate per il commit.",
			"config.alwaysSignOff": "Controlla il flag di signoff per tutti i commit.",
			"config.ignoredRepositories": "Elenco dei repository GIT da ignorare.",
			"config.scanRepositories": "Elenco dei percorsi in cui cercare i repository GIT.",
			"config.showProgress": "Determina se le azioni git devono mostrare lo stato di avanzamento.",
			"config.rebaseWhenSync": "Forza git a usare rebase durante l'esecuzione del comando di sincronizzazione.",
			"config.confirmEmptyCommits": "Conferma sempre la creazione di commit vuoti.",
			"config.fetchOnPull": "Recupera tutti i rami durante il pull oppure solo il ramo corrente.",
			"config.pullTags": "Recupera tutti i tag durante il pull.",
			"config.autoStash": "Accantona eventuali modifiche prima del pull e le ripristina dopo un pull riuscito.",
			"config.allowForcePush": "Controlla se il push forzato (con o senza lease) è abilitato.",
			"config.useForcePushWithLease": "Controlla se il push forzato usa la variante più sicura di forzatura con lease.",
			"config.confirmForcePush": "Controlla se chiedere conferma prima di eseguire il push forzato.",
			"config.openDiffOnClick": "Controlla se aprire l'editor diff quando si fa clic su una modifica; in caso contrario verrà aperto l'editor normale.",
			"config.supportCancellation": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
			"config.branchSortOrder": "Controls the sort order for branches.",
			"colors.added": "Colore delle risorse aggiunte.",
			"colors.modified": "Colore delle risorse modificate.",
			"colors.deleted": "Colore delle risorse eliminate.",
			"colors.untracked": "Colore delle risorse non tracciate.",
			"colors.ignored": "Colore delle risorse ignorate.",
			"colors.conflict": "Colore delle risorse con conflitti.",
			"colors.submodule": "Colore delle risorse sottomodulo"
		}
	}
}