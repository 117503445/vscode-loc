{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"extension.description": "Поддръжка за дебъгване на Node.js",
			"node.label": "Node.js версия 6.3+ чрез протокола „Inspector“",
			"node.sourceMaps.description": "Използване на кодови съответствия на JavaScript (ако съществуват).",
			"outDir.deprecationMessage": "Атрибутът „outDir“ е излязъл от употреба. Вместо него използвайте „outFiles“.",
			"node.outFiles.description": "Ако са включени кодовите съответствия, тези шаблони посочват създадените файлове на JavaScript. Ако някой шаблон започва с `!`, то разпознатите от него файлове се изключват. Ако това не е посочено, се очаква създаденият код да бъде в същата папка като оригиналния.",
			"node.stopOnEntry.description": "Автоматично спиране на програмата след стартиране.",
			"node.port.description": "Порт за дебъгване, към който да се прикачи. По подразбиране: 9229.",
			"node.address.description": "TCP/IP адрес на порта за дебъгване. По подразбиране: „localhost“.",
			"node.timeout.description": "Това е период (в милисекунди), в който ще се правят опити за свързване с Node.js. По подразбиране стойността е 10000 мсек.",
			"node.smartStep.description": "Автоматично преминаване през произведения код, който не може да бъде свързан с оригиналния изходен код.",
			"node.enableSourceMapCaching.description": "Когато кодовите съответствия се свалят от някакъв адрес, да се кешират на диска.",
			"node.diagnosticLogging.description": "Ако е „true“ (вярно), адаптерът ща извежда своя собствена диагностична информация в конзолата.",
			"node.diagnosticLogging.deprecationMessage": "Стойността „diagnosticLogging“ е излязла от употреба. Вместо това използвайте „trace“.",
			"node.verboseDiagnosticLogging.description": "Ако е „true“ (вярно), адаптерът ще извежда цялата информация за трафика между клиента и целта (заедно с цялата информация от „diagnosticLogging“)",
			"node.verboseDiagnosticLogging.deprecationMessage": "Стойността „verboseDiagnosticLogging“ е излязла от употреба. Вместо това използвайте „trace“.",
			"node.trace.description": "Ако е „true“ (вярно), дебъгерът ще извежда подробна информация във файл. Ако е „verbose“, ще показва информацията и в конзолата.",
			"node.sourceMapPathOverrides.description": "Набор от съответствия за замяна на местоположенията на изходните файлове от това, което е посочено в кодовото съответствие, към истинските местоположения на диска. Вижте файла „README“ за повече подробности.",
			"node.skipFiles.description": "Масив от имена на файлове или папки, или шаблони на пътища, които да бъдат пропускани при дебъгване.",
			"node.restart.description": "Рестартиране на сесията след прекратяване на изпълнението на Node.js.",
			"node.showAsyncStacks.description": "Показване на асинхронните извиквания, които са довели до текущия стек на извикванията.",
			"node.launch.program.description": "Абсолютен път до програмата.",
			"node.launch.console.description": "Къде да се пусне целта за дебъгване: във вътрешната конзола, във вградения терминал или във външен терминал.",
			"node.launch.args.description": "Аргументи за команден ред, които да бъдат подадени на програмата.",
			"node.launch.cwd.description": "Пълен път до работната папка на програмата, която се дебъгва.",
			"node.launch.runtimeExecutable.description": "Изпълнима среда, която да се използва. Това трябва да бъде или абсолютен път, или име на изпълнима среда, която е налична в PATH. Ако няма стойност, ще се използва `node`.",
			"node.launch.runtimeArgs.description": "Аргументи, които да бъдат подадени на изпълнимия файл (незадължително).",
			"node.launch.env.description": "Променливи на средата, които да бъдат подадени към програмата. Стойността `null` премахва променливата от средата.",
			"node.launch.envFile.description": "Пълен път до файл, съдържащ дефиниции на променливи на средата.",
			"node.launch.outputCapture.description": "Откъде да се прихващат изведените съобщения. Това може да бъде ППИ за дебъгване, или потоците „stdout“ и „stderr“.",
			"node.launch.config.name": "Пускане",
			"node.attach.processId.description": "Ид. на процеса, към който да се прикачи.",
			"node.attach.localRoot.description": "Местната главна папка на изходния код, която съответства на „remoteRoot“.",
			"node.attach.remoteRoot.description": "Главната папка на изходния код на отдалечения компютър.",
			"node.attach.config.name": "Прикачане",
			"node.processattach.config.name": "Прикачане към процес",
			"toggle.skipping.this.file": "Превключване на пропускането на този файл",
			"extensionHost.label": "Разработка на разширения за VS Code",
			"extensionHost.launch.runtimeExecutable.description": "Пълен път до VS Code.",
			"extensionHost.launch.stopOnEntry.description": "Автоматично спиране на сървъра за разширения след стартиране.",
			"extensionHost.launch.env.description": "Променливи на средата, които да бъдат подадени към сървъра за разширения.",
			"extensionHost.snippet.launch.label": "Разработка на разширения за VS Code",
			"extensionHost.snippet.launch.description": "Пускане на разширение на VS Code в режим за дебъгване",
			"extensionHost.launch.config.name": "Пускане на разширението"
		}
	}
}