{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"reloadProjects.title": "Перезавантажити Проект",
			"configuration.typescript": "TypeScript",
			"typescript.useCodeSnippetsOnMethodSuggest.dec": "Повний набір функцій з їх підписом параметра.",
			"configuration.suggest.insertParametersForFunctionCalls": "Повний набір функцій з їх підписом параметра.",
			"typescript.tsdk.desc": "Вказує шлях до папки, яка містить tsserver і lib*.d.ts файли для використання.",
			"typescript.tsserver.log": "Дає можливість ведення журналу сервера TS до файлу. Цей журнал можуть використовуватися для діагностики сервер TS питання. Журнал може містити шляхи до файлів, вихідний код і іншу потенційно конфіденційну інформацію з вашого проекту.",
			"typescript.tsserver.trace": "Дає можливість відстеження повідомлень, надісланих на сервер TS. Це трасування можна використовувати для діагностики проблем із сервером TS. Трасування може містити шляхи до файлів, вихідний код і іншу потенційно конфіденційну інформацію з вашого проекту.",
			"typescript.validate.enable": "On/off TypeScript перевірку.",
			"typescript.format.enable": "On/off TypeScript форматування за замовчуванням.",
			"javascript.format.enable": "On/off JavaScript форматування за замовчуванням.",
			"format.insertSpaceAfterCommaDelimiter": "Визначає вільний простір після коми.",
			"format.insertSpaceBeforeAndAfterBinaryOperators": "Визначає обробку пробілів після бінарного оператора.",
			"format.insertSpaceAfterKeywordsInControlFlowStatements": "Визначає обробку пробілів після запитів у інструкції управління потоком.",
			"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Визначає обробку пробілів після ключового слова function для анонімних функцій.",
			"format.placeOpenBraceOnNewLineForFunctions": "Визначає, чи відкрити дужку з нового рядку для функції чи ні.",
			"format.placeOpenBraceOnNewLineForControlBlocks": "Визначає, чи відкрити дужку з нового рядку для блоків управління чи ні.",
			"javascript.validate.enable": "On/off JavaScript перевірку.",
			"goToProjectConfig.title": "Перейдіть в Налаштування проекту",
			"javascript.referencesCodeLens.enabled": "Включити/відключити посилання codelens в JavaScript.",
			"typescript.check.npmIsInstalled": "Перевірте, чи встановлено NPM для автоматичного отримання типу.",
			"javascript.nameSuggestions": "Увімкнути або вимкнути, у тому числі унікальні назви з файлу в списки пропозицій JavaScript.",
			"typescript.problemMatchers.tsc.label": "TypeScript проблеми",
			"typescript.problemMatchers.tscWatch.label": "TypeScript проблеми (режим спостереження)",
			"typescript.quickSuggestionsForPaths": "Включення/виключення швидкої пропозиції при введенні в шлях імпорту."
		},
		"out/utils/versionProvider": {
			"couldNotLoadTsVersion": "Не вдалося завантажити Тypescript версію на цьому шляху",
			"noBundledServerFound": "VS Code's Tsserver був видалений іншою програмою, такою як інструмент виявлення вірусів за поведінкою. Будь ласка, переустановіть VS Code."
		},
		"out/utils/versionPicker": {
			"useVSCodeVersionOption": "Використовувати VS Code версію",
			"useWorkspaceVersionOption": "Використання робочого простору версію",
			"learnMore": "Дізнатися більше",
			"selectTsVersion": "Виберіть Тypescript версія використовувати для JavaScript і Тypescript особливостей"
		},
		"out/utils/typingsStatus": {
			"installingPackages": "Дані вибірки для кращого TypeScript технології intellisense",
			"typesInstallerInitializationFailed.doNotCheckAgain": "Не показувати знову"
		},
		"out/utils/surveyor": {
			"takeShortSurvey": "Взяти короткий огляд"
		},
		"out/utils/projectStatus": {
			"hintExclude": "Для включення проекту в JavaScript/typescript мовні особливості, виключити папки з великою кількістю файлів, наприклад: {0}",
			"hintExclude.generic": "Для включення проекту в JavaScript/typescript мовні можливості, виключити великі папки з вихідними файлами, на яких ви не працюєте.",
			"large.label": "Настроювання виключень",
			"hintExclude.tooltip": "Для включення проекту в JavaScript/typescript мовні можливості, виключити великі папки з вихідними файлами, на яких ви не працюєте."
		},
		"out/utils/logger": {
			"channelName": "TypeScript"
		},
		"out/utils/api": {
			"invalidVersion": "Невірна версія"
		},
		"out/features/updatePathsOnRename": {
			"reject.title": "Ні",
			"accept.title": "Так"
		},
		"out/features/task": {
			"buildTscLabel": "будувати - {0}",
			"buildAndWatchTscLabel": "дивитися - {0}"
		},
		"out/features/referencesCodeLens": {
			"oneReferenceLabel": "1 посилання",
			"manyReferenceLabel": "{0} посилань",
			"referenceErrorLabel": "Не можу визначити посилання"
		},
		"out/features/quickFix": {},
		"out/features/organizeImports": {},
		"out/features/jsDocCompletions": {
			"typescript.jsDocCompletionItem.documentation": "JSDoc коментарі"
		},
		"out/features/implementationsCodeLens": {
			"implementationsErrorLabel": "Не вдалося визначити реалізацій",
			"oneImplementationLabel": "1 реалізація",
			"manyImplementationLabel": "{0} реалізацій"
		},
		"out/features/directiveCommentCompletions": {
			"ts-check": "Включає семантичні перевірки в файлі JavaScript. Повинні бути у верхній частині файлу.",
			"ts-nocheck": "Виключає семантичнуперевірку в файлі JavaScript. Повинні бути у верхній частині файлу.",
			"ts-ignore": "Пригнічує @ts-check помилки в наступному рядку файлу."
		},
		"out/features/completions": {
			"selectCodeAction": "Виберіть дію коду, яку потрібно застосувати",
			"acquiringTypingsLabel": "Придбання typings...",
			"acquiringTypingsDetail": "Придбання typings визначень для IntelliSense.",
			"autoImportLabel": "Автоматичний імпорт з {0}"
		},
		"out/typescriptServiceClient": {
			"noServerFound": "Шлях {0} не вказує на допустимий tsserver установки. Повернутися до пакетної TypeScript версії.",
			"typescript.openTsServerLog.notSupported": "TS журналювання потрібне TS 2.2.2+",
			"typescript.openTsServerLog.loggingNotEnabled": "Сервер TS журналювання не включено. Будь ласка, встановіть `typescript.tsserver.log` і перезавантажте сервер TS, щоб увімкнути журналювання",
			"typescript.openTsServerLog.enableAndReloadOption": "Увімкнути журналювання і перезапустити сервер TS",
			"typescript.openTsServerLog.noLogFile": "Сервер TS не розпочав ведення журналу.",
			"openTsServerLog.openFileFailedFailed": "Не вдалося відкрити файл журналу сервера TS",
			"serverDiedAfterStart": "Сервіс TypeScript мови помер 5 разів відразу після його старту. Сервіс не буде перезапущений.",
			"serverDiedReportIssue": "Звіт",
			"serverDied": "Сервіс TypeScript мови несподівано помер 5 разів за останні 5 хвилин."
		},
		"out/commands": {}
	}
}