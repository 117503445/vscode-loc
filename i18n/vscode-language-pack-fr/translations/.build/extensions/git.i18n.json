{
	"": [
		"--------------------------------------------------------------------------------------------",
		"Copyright (c) Microsoft Corporation. All rights reserved.",
		"Licensed under the MIT License. See License.txt in the project root for license information.",
		"--------------------------------------------------------------------------------------------",
		"Do not edit this file. It is machine generated."
	],
	"version": "1.0.0",
	"contents": {
		"package": {
			"displayName": "Git",
			"description": "Intégration Git SCM",
			"command.clone": "Cloner",
			"command.init": "Initialiser le dépôt",
			"command.openRepository": "Ouvrir le dépôt",
			"command.close": "Fermer le dépôt",
			"command.refresh": "Actualiser",
			"command.openChange": "Ouvrir les modifications",
			"command.openFile": "Ouvrir un fichier",
			"command.openHEADFile": "Ouvrir le fichier (HEAD)",
			"command.stage": "Mettre en attente les modifications",
			"command.stageAll": "Mettre en attente toutes les modifications",
			"command.stageSelectedRanges": "Mettre en attente les plages sélectionnées",
			"command.revertSelectedRanges": "Restaurer les portées sélectionnées",
			"command.stageChange": "Mettre en attente la modification",
			"command.revertChange": "Restaurer la modification",
			"command.unstage": "Annuler la mise en attente des modifications",
			"command.unstageAll": "Annuler la mise en attente de toutes les modifications",
			"command.unstageSelectedRanges": "Annuler la mise en attente des plages sélectionnées",
			"command.clean": "Ignorer les modifications",
			"command.cleanAll": "Ignorer toutes les modifications",
			"command.commit": "Activer",
			"command.commitStaged": "Valider le contenu en zone de transit",
			"command.commitEmpty": "Commit vide",
			"command.commitStagedSigned": "Valider les modifications en attente (signé)",
			"command.commitStagedAmend": "Valider les modifications en attente (modifier)",
			"command.commitAll": "Valider tout",
			"command.commitAllSigned": "Valider tout (signé)",
			"command.commitAllAmend": "Tout Valider (Modifier)",
			"command.restoreCommitTemplate": "Restaurer le modèle de commit",
			"command.undoCommit": "Annuler la dernière validation",
			"command.checkout": "Extraire vers...",
			"command.branch": "Créer une branche...",
			"command.branchFrom": "Créer une branche à partir de...",
			"command.deleteBranch": "Supprimer la branche...",
			"command.renameBranch": "Renommer la branche...",
			"command.merge": "Fusionner la branche...",
			"command.createTag": "Créer une balise",
			"command.fetch": "Rappatrier",
			"command.fetchPrune": "Récupérer (élaguer)",
			"command.fetchAll": "Récupérer depuis tous les Remotes",
			"command.pull": "Pull",
			"command.pullRebase": "Pull (rebaser)",
			"command.pullFrom": "Extraire de...",
			"command.push": "Push",
			"command.pushForce": "Pousser (forcer)",
			"command.pushTo": "Transfert (Push) vers...",
			"command.pushToForce": "Transfert (Push) vers... (Force)",
			"command.pushFollowTags": "Pousser (suivre des balises)",
			"command.pushFollowTagsForce": "Pousser (suivre des balises, forcer)",
			"command.addRemote": "Ajouter un dépôt distant",
			"command.removeRemote": "Supprimer le dépôt distant",
			"command.sync": "Synchroniser",
			"command.syncRebase": "Synchroniser (Rebase)",
			"command.publish": "Publier la branche",
			"command.showOutput": "Afficher la sortie Git",
			"command.ignore": "Ajouter un fichier à .gitignore",
			"command.stashIncludeUntracked": "Remiser (Inclure les non-tracés)",
			"command.stash": "Remiser (stash)",
			"command.stashPop": "Appliquer et supprimer la remise...",
			"command.stashPopLatest": "Appliquer et supprimer la dernière remise",
			"command.stashApply": "Appliquer la remise (Stash)...",
			"command.stashApplyLatest": "Appliquer la dernière remise (Stash)",
			"config.enabled": "Indique si git est activé.",
			"config.path": "Chemin d’accès et nom de fichier de l'exécutable git, par exemple `C:\\Program Files\\Git\\bin\\git.exe` (Windows).",
			"config.autoRepositoryDetection": "Configure le moment où les dépôts doivent être détectés automatiquement.",
			"config.autoRepositoryDetection.true": "Recherchez dans les deux sous-dossiers du dossier ouvert en cours et dans les dossiers parents de fichiers ouverts.",
			"config.autoRepositoryDetection.false": "Désactivez l’analyse de dépôt automatique.",
			"config.autoRepositoryDetection.subFolders": "Rechercher dans les sous-dossiers du dossier actuellement ouvert.",
			"config.autoRepositoryDetection.openEditors": "Rechercher dans les dossiers parents de fichiers ouverts.",
			"config.autorefresh": "Détermine si l'actualisation automatique est activée.",
			"config.autofetch": "Si activé, les validations sont automatiquement récupérées à partir du site distant du dépôt Git actuel.",
			"config.autofetchPeriod": "Durée en secondes entre chaque récupération git automatique, quand 'git.autofetch' est activé.",
			"config.confirmSync": "Confirmez avant de synchroniser des dépôts git.",
			"config.countBadge": "Contrôle le badge de compte Git.",
			"config.countBadge.all": "Compter tous les changements.",
			"config.countBadge.tracked": "Compter uniquement les changements suivis.",
			"config.countBadge.off": "Désactivez le compteur.",
			"config.checkoutType": "Contrôle les types de branches répertoriés lors de l’exécution de 'Extraire vers... '.",
			"config.checkoutType.all": "Afficher toutes les références.",
			"config.checkoutType.local": "Affichez seulement les branches locales.",
			"config.checkoutType.tags": "Afficher uniquement les balises.",
			"config.checkoutType.remote": "Affichez seulement les branches distantes.",
			"config.branchValidationRegex": "Expression régulière pour valider les nouveaux noms de branche.",
			"config.branchWhitespaceChar": "Le caractère pour remplacer les espaces dans les nouveaux noms de branche.",
			"config.ignoreLegacyWarning": "Ignore l'avertissement Git hérité.",
			"config.ignoreMissingGitWarning": "Ignore l'avertissement quand Git est manquant.",
			"config.ignoreLimitWarning": "Ignore l'avertissement en cas de changements trop nombreux dans un dépôt.",
			"config.defaultCloneDirectory": "Emplacement par défaut où cloner un dépôt git.",
			"config.enableSmartCommit": "Validez toutes les modifications en l'absence de modifications en attente.",
			"config.smartCommitChanges": "Contrôle les modifications organisées automatiquement par Smart Commit.",
			"config.smartCommitChanges.all": "Organise automatiquement toutes les modifications.",
			"config.smartCommitChanges.tracked": "Organise automatiquement les modifications suivies uniquement.",
			"config.suggestSmartCommit": "Propose d'activer Smart Commit (valide toutes les modifications en l'absence de modifications organisées).",
			"config.enableCommitSigning": "Permet de valider en signant avec GPG.",
			"config.discardAllScope": "Contrôle les modifications ignorées par la commande 'Ignorer toutes les modifications'. 'all' ignore toutes les modifications. 'tracked' ignore uniquement les fichiers suivis. 'prompt' affiche un message d'invite chaque fois que l’action est exécutée.",
			"config.decorations.enabled": "Contrôle si Git contribue aux couleurs et aux badges de l’Explorateur et à l'affichage des éditeurs ouverts. ",
			"config.enableStatusBarSync": "Contrôle si la commande Git Sync apparaît dans la barre d'état.",
			"config.promptToSaveFilesBeforeCommit": "Contrôle si Git doit vérifier les fichiers non sauvegardés avant d'effectuer le commit.",
			"config.promptToSaveFilesBeforeCommit.always": "Vérifiez les fichiers non enregistrés.",
			"config.promptToSaveFilesBeforeCommit.staged": "Vérifiez uniquement les fichiers organisés non enregistrés.",
			"config.promptToSaveFilesBeforeCommit.never": "Désactivez la vérification.",
			"config.postCommitCommand": "Exécute une commande git après un commit réussi.",
			"config.postCommitCommand.none": "N'exécutez pas de commande après une validation.",
			"config.postCommitCommand.push": "Exécutez 'Git Push' après une validation réussie.",
			"config.postCommitCommand.sync": "Exécutez 'Git Sync' après une validation réussie.",
			"config.showInlineOpenFileAction": "Contrôle s’il faut afficher une action Ouvrir le fichier dans l’affichage des modifications de Git.",
			"config.showPushSuccessNotification": "Contrôle s’il faut afficher une notification en cas de réussite d'un envoi (push).",
			"config.inputValidation": "Contrôle quand afficher la validation de la saisie du message de commit.",
			"config.inputValidationLength": "Contrôle le taille de la longueur de message de commit pour afficher un avertissement.",
			"config.inputValidationSubjectLength": "Contrôle le seuil de longueur de l'objet du message de validation pour afficher un avertissement. Annulez pour hériter la valeur de 'config.inputValidationLength'.",
			"config.detectSubmodules": "Contrôle s’il faut détecter automatiquement les sous-modules git.",
			"config.detectSubmodulesLimit": "Contrôle la limite de sous-modules git détectés.",
			"config.alwaysShowStagedChangesResourceGroup": "Toujours afficher le groupe de ressources des changements en zone de transit (Staged).",
			"config.alwaysSignOff": "Contrôle le flag signoff pour toutes les modifications.",
			"config.ignoredRepositories": "Liste des dépôts git à ignorer.",
			"config.scanRepositories": "Liste des chemins d’accès pour rechercher des dépôts git.",
			"config.showProgress": "Contrôle si les actions git doivent afficher la progression.",
			"config.rebaseWhenSync": "Forcez git à utiliser rebase pendant l'exécution de la commande sync.",
			"config.confirmEmptyCommits": "Toujours vérifier la création de commit vide.",
			"config.fetchOnPull": "Chercher dans toutes les branches, lorsque vous récupérez ou simplement celle en cours.",
			"config.pullTags": "Récupérez toutes les balises pendant le tirage.",
			"config.autoStash": "Remisez (stash) les changements avant de les tirer et de les restaurer après un tirage réussi.",
			"config.allowForcePush": "Contrôle si force push (avec ou sans lease) est activé.",
			"config.useForcePushWithLease": "Contrôles si force push utilise la variante force-with-lease plus sûr.",
			"config.confirmForcePush": "Détermine s’il faut demander confirmation avant de forcer le push.",
			"config.openDiffOnClick": "Contrôle si l'éditeur de diff doit être ouvert quand l'utilisateur clique sur un changement. Sinon, l'éditeur normal est ouvert.",
			"config.supportCancellation": "Contrôle si une notification apparaît lors de l'exécution de l'action Sync, qui permet à l'utilisateur d'annuler l'opération.",
			"config.branchSortOrder": "Contrôle l'ordre de tri des branches.",
			"colors.added": "Couleur des ressources ajoutées.",
			"colors.modified": "Couleur pour les ressources modifiées.",
			"colors.deleted": "Couleur des ressources supprimées.",
			"colors.untracked": "Couleur pour les ressources non tracées.",
			"colors.ignored": "Couleur des ressources ignorées.",
			"colors.conflict": "Couleur pour les ressources avec des conflits.",
			"colors.submodule": "Couleur pour les ressources de sous-module."
		}
	}
}