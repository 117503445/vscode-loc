on:
  workflow_dispatch:

name: Publish (Gated)

jobs:
  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - id: set-matrix
        run: |
          $obj = @{
            languagePack = Get-ChildItem i18n | ForEach-Object Name
          }
          Write-Host "::set-output name=matrix::$($obj | ConvertTo-Json -Depth 100 -Compress)"
        shell: pwsh

  build:
    name: Build Stable
    needs: determine-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.determine-matrix.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate Name
        run: node -e "console.log('PACKAGE_NAME=' + require('./i18n/${{ matrix.languagePack }}/package.json').name + '-v' + require('./i18n/${{ matrix.languagePack }}/package.json').version)" >> $GITHUB_ENV
      - name: Install
        run: cd ./i18n/${{ matrix.languagePack }} && npm i
      - name: Build Extension
        run: cd ./i18n/${{ matrix.languagePack }} && npx vsce package -o ${{ env.PACKAGE_NAME }}.vsix
      - name: Publish Test Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}.vsix
          path: ./i18n/${{ matrix.languagePack }}/${{ env.PACKAGE_NAME }}.vsix

  deploy:
    name: Publish Stable
    needs:
      - build
      - determine-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJSON(needs.determine-matrix.outputs.matrix)}}
    environment: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate Name
        run: node -e "console.log('PACKAGE_NAME=' + require('./i18n/${{ matrix.languagePack }}/package.json').name + '-v' + require('./i18n/${{ matrix.languagePack }}/package.json').version)" >> $GITHUB_ENV
      - name: Fetch Test Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.PACKAGE_NAME }}.vsix
      - name: Verify access to publisher
        run: npx vsce verify-pat -p ${{ secrets.MARKETPLACE_PAT }} MS-CEINTL
#       - name: Publish Extension
#         run: npx vsce publish --packagePath ./${{ env.PACKAGE_NAME }}.vsix -p ${{ secrets.MARKETPLACE_PAT }}
